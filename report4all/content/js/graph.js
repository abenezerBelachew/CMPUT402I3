/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 75.0, "minX": 0.0, "maxY": 943217.0, "series": [{"data": [[0.0, 75.0], [0.1, 316.0], [0.2, 733.0], [0.3, 1148.0], [0.4, 1329.0], [0.5, 1637.0], [0.6, 2904.0], [0.7, 2973.0], [0.8, 3104.0], [0.9, 3280.0], [1.0, 3425.0], [1.1, 3526.0], [1.2, 3637.0], [1.3, 4039.0], [1.4, 4474.0], [1.5, 5434.0], [1.6, 5699.0], [1.7, 6310.0], [1.8, 6521.0], [1.9, 7086.0], [2.0, 10745.0], [2.1, 11787.0], [2.2, 14761.0], [2.3, 15629.0], [2.4, 16120.0], [2.5, 16200.0], [2.6, 17459.0], [2.7, 19485.0], [2.8, 19615.0], [2.9, 20919.0], [3.0, 21223.0], [3.1, 22129.0], [3.2, 23176.0], [3.3, 23555.0], [3.4, 25427.0], [3.5, 26188.0], [3.6, 28141.0], [3.7, 28617.0], [3.8, 30645.0], [3.9, 32152.0], [4.0, 32749.0], [4.1, 34430.0], [4.2, 36038.0], [4.3, 36894.0], [4.4, 38136.0], [4.5, 40034.0], [4.6, 40827.0], [4.7, 44934.0], [4.8, 45881.0], [4.9, 49134.0], [5.0, 53223.0], [5.1, 53669.0], [5.2, 59952.0], [5.3, 60518.0], [5.4, 64153.0], [5.5, 64696.0], [5.6, 73151.0], [5.7, 75445.0], [5.8, 76266.0], [5.9, 82311.0], [6.0, 82937.0], [6.1, 87390.0], [6.2, 89686.0], [6.3, 90365.0], [6.4, 91768.0], [6.5, 95532.0], [6.6, 96549.0], [6.7, 98440.0], [6.8, 103061.0], [6.9, 103696.0], [7.0, 104515.0], [7.1, 107659.0], [7.2, 114788.0], [7.3, 115494.0], [7.4, 116704.0], [7.5, 119817.0], [7.6, 120415.0], [7.7, 120579.0], [7.8, 123769.0], [7.9, 130667.0], [8.0, 135190.0], [8.1, 142201.0], [8.2, 145498.0], [8.3, 148172.0], [8.4, 154217.0], [8.5, 158160.0], [8.6, 160554.0], [8.7, 163381.0], [8.8, 163899.0], [8.9, 164739.0], [9.0, 165225.0], [9.1, 165486.0], [9.2, 165899.0], [9.3, 167493.0], [9.4, 167564.0], [9.5, 167943.0], [9.6, 169704.0], [9.7, 170129.0], [9.8, 170477.0], [9.9, 171723.0], [10.0, 172077.0], [10.1, 174614.0], [10.2, 174929.0], [10.3, 175389.0], [10.4, 175923.0], [10.5, 179023.0], [10.6, 180383.0], [10.7, 180757.0], [10.8, 182001.0], [10.9, 183399.0], [11.0, 183981.0], [11.1, 184705.0], [11.2, 188734.0], [11.3, 190437.0], [11.4, 191204.0], [11.5, 191606.0], [11.6, 192166.0], [11.7, 192701.0], [11.8, 193260.0], [11.9, 193656.0], [12.0, 193895.0], [12.1, 193974.0], [12.2, 194045.0], [12.3, 194546.0], [12.4, 196846.0], [12.5, 197879.0], [12.6, 198269.0], [12.7, 199257.0], [12.8, 200794.0], [12.9, 201980.0], [13.0, 202207.0], [13.1, 203260.0], [13.2, 204363.0], [13.3, 204597.0], [13.4, 204913.0], [13.5, 210666.0], [13.6, 213427.0], [13.7, 214649.0], [13.8, 215670.0], [13.9, 217611.0], [14.0, 221028.0], [14.1, 221347.0], [14.2, 222182.0], [14.3, 223398.0], [14.4, 226114.0], [14.5, 229142.0], [14.6, 230461.0], [14.7, 230846.0], [14.8, 231134.0], [14.9, 231732.0], [15.0, 231991.0], [15.1, 233636.0], [15.2, 234364.0], [15.3, 239967.0], [15.4, 240361.0], [15.5, 240833.0], [15.6, 241638.0], [15.7, 242347.0], [15.8, 242409.0], [15.9, 243523.0], [16.0, 245431.0], [16.1, 245558.0], [16.2, 246095.0], [16.3, 246804.0], [16.4, 248068.0], [16.5, 251638.0], [16.6, 252371.0], [16.7, 253293.0], [16.8, 255374.0], [16.9, 255896.0], [17.0, 257530.0], [17.1, 259408.0], [17.2, 260184.0], [17.3, 260326.0], [17.4, 260447.0], [17.5, 260567.0], [17.6, 260731.0], [17.7, 261202.0], [17.8, 263724.0], [17.9, 264489.0], [18.0, 265113.0], [18.1, 265677.0], [18.2, 266132.0], [18.3, 266245.0], [18.4, 266508.0], [18.5, 266796.0], [18.6, 267115.0], [18.7, 268420.0], [18.8, 269176.0], [18.9, 269575.0], [19.0, 269748.0], [19.1, 269957.0], [19.2, 273132.0], [19.3, 275678.0], [19.4, 276738.0], [19.5, 279116.0], [19.6, 279771.0], [19.7, 280350.0], [19.8, 283137.0], [19.9, 284535.0], [20.0, 286108.0], [20.1, 286593.0], [20.2, 286961.0], [20.3, 287157.0], [20.4, 287526.0], [20.5, 287923.0], [20.6, 288662.0], [20.7, 289379.0], [20.8, 289753.0], [20.9, 289993.0], [21.0, 290098.0], [21.1, 290388.0], [21.2, 292046.0], [21.3, 292297.0], [21.4, 292817.0], [21.5, 293217.0], [21.6, 293561.0], [21.7, 295406.0], [21.8, 297707.0], [21.9, 297828.0], [22.0, 298394.0], [22.1, 299165.0], [22.2, 299699.0], [22.3, 300855.0], [22.4, 301902.0], [22.5, 303617.0], [22.6, 305226.0], [22.7, 305787.0], [22.8, 306764.0], [22.9, 307205.0], [23.0, 307705.0], [23.1, 309131.0], [23.2, 312725.0], [23.3, 313603.0], [23.4, 314674.0], [23.5, 316316.0], [23.6, 319024.0], [23.7, 320641.0], [23.8, 322089.0], [23.9, 322328.0], [24.0, 323210.0], [24.1, 323920.0], [24.2, 324443.0], [24.3, 324874.0], [24.4, 328132.0], [24.5, 330456.0], [24.6, 332352.0], [24.7, 337260.0], [24.8, 339243.0], [24.9, 340331.0], [25.0, 342494.0], [25.1, 346875.0], [25.2, 356667.0], [25.3, 359844.0], [25.4, 363049.0], [25.5, 366892.0], [25.6, 371031.0], [25.7, 371387.0], [25.8, 372010.0], [25.9, 372727.0], [26.0, 373083.0], [26.1, 374635.0], [26.2, 375124.0], [26.3, 377540.0], [26.4, 380392.0], [26.5, 381136.0], [26.6, 381939.0], [26.7, 382455.0], [26.8, 382589.0], [26.9, 382899.0], [27.0, 384891.0], [27.1, 385936.0], [27.2, 387244.0], [27.3, 387992.0], [27.4, 388520.0], [27.5, 388764.0], [27.6, 389483.0], [27.7, 390215.0], [27.8, 390674.0], [27.9, 391583.0], [28.0, 393385.0], [28.1, 395523.0], [28.2, 397231.0], [28.3, 397694.0], [28.4, 398042.0], [28.5, 398659.0], [28.6, 399826.0], [28.7, 400885.0], [28.8, 401341.0], [28.9, 405924.0], [29.0, 407291.0], [29.1, 408182.0], [29.2, 409218.0], [29.3, 415758.0], [29.4, 416134.0], [29.5, 416206.0], [29.6, 416459.0], [29.7, 417429.0], [29.8, 418233.0], [29.9, 419111.0], [30.0, 419859.0], [30.1, 420409.0], [30.2, 421945.0], [30.3, 422770.0], [30.4, 422848.0], [30.5, 422966.0], [30.6, 423045.0], [30.7, 423143.0], [30.8, 423198.0], [30.9, 424079.0], [31.0, 424113.0], [31.1, 424499.0], [31.2, 425040.0], [31.3, 425846.0], [31.4, 426607.0], [31.5, 427389.0], [31.6, 427912.0], [31.7, 428713.0], [31.8, 428854.0], [31.9, 429026.0], [32.0, 429144.0], [32.1, 429343.0], [32.2, 429496.0], [32.3, 429738.0], [32.4, 430621.0], [32.5, 431692.0], [32.6, 431846.0], [32.7, 434294.0], [32.8, 434903.0], [32.9, 435088.0], [33.0, 435638.0], [33.1, 436785.0], [33.2, 437051.0], [33.3, 437693.0], [33.4, 438044.0], [33.5, 438343.0], [33.6, 439549.0], [33.7, 440463.0], [33.8, 440800.0], [33.9, 441093.0], [34.0, 442069.0], [34.1, 444562.0], [34.2, 445257.0], [34.3, 445735.0], [34.4, 446107.0], [34.5, 446815.0], [34.6, 446985.0], [34.7, 447600.0], [34.8, 448435.0], [34.9, 448972.0], [35.0, 449698.0], [35.1, 450097.0], [35.2, 450715.0], [35.3, 451313.0], [35.4, 451500.0], [35.5, 451774.0], [35.6, 452494.0], [35.7, 452927.0], [35.8, 453883.0], [35.9, 454286.0], [36.0, 454649.0], [36.1, 454877.0], [36.2, 455237.0], [36.3, 455805.0], [36.4, 456111.0], [36.5, 456638.0], [36.6, 456942.0], [36.7, 457210.0], [36.8, 457872.0], [36.9, 458369.0], [37.0, 459010.0], [37.1, 460433.0], [37.2, 461472.0], [37.3, 462125.0], [37.4, 462277.0], [37.5, 462562.0], [37.6, 463087.0], [37.7, 463408.0], [37.8, 463671.0], [37.9, 463821.0], [38.0, 464412.0], [38.1, 466337.0], [38.2, 466453.0], [38.3, 466585.0], [38.4, 467087.0], [38.5, 467433.0], [38.6, 467452.0], [38.7, 467641.0], [38.8, 467842.0], [38.9, 469053.0], [39.0, 469327.0], [39.1, 469396.0], [39.2, 470256.0], [39.3, 470586.0], [39.4, 470882.0], [39.5, 471214.0], [39.6, 471670.0], [39.7, 472019.0], [39.8, 472960.0], [39.9, 473364.0], [40.0, 473514.0], [40.1, 474095.0], [40.2, 474347.0], [40.3, 475045.0], [40.4, 475295.0], [40.5, 475424.0], [40.6, 475757.0], [40.7, 476000.0], [40.8, 476063.0], [40.9, 476201.0], [41.0, 476650.0], [41.1, 477014.0], [41.2, 477222.0], [41.3, 477286.0], [41.4, 477565.0], [41.5, 478330.0], [41.6, 478962.0], [41.7, 479124.0], [41.8, 480064.0], [41.9, 480144.0], [42.0, 480334.0], [42.1, 480712.0], [42.2, 480862.0], [42.3, 481598.0], [42.4, 482598.0], [42.5, 482720.0], [42.6, 482868.0], [42.7, 483483.0], [42.8, 483777.0], [42.9, 483971.0], [43.0, 484469.0], [43.1, 484968.0], [43.2, 485208.0], [43.3, 485766.0], [43.4, 486018.0], [43.5, 486149.0], [43.6, 486502.0], [43.7, 487126.0], [43.8, 487383.0], [43.9, 488177.0], [44.0, 488448.0], [44.1, 488575.0], [44.2, 488757.0], [44.3, 489184.0], [44.4, 489665.0], [44.5, 489719.0], [44.6, 489895.0], [44.7, 490167.0], [44.8, 490335.0], [44.9, 490777.0], [45.0, 491006.0], [45.1, 491116.0], [45.2, 491473.0], [45.3, 491733.0], [45.4, 492661.0], [45.5, 492744.0], [45.6, 492784.0], [45.7, 492899.0], [45.8, 493013.0], [45.9, 493557.0], [46.0, 493693.0], [46.1, 493803.0], [46.2, 493880.0], [46.3, 494416.0], [46.4, 494779.0], [46.5, 494935.0], [46.6, 495807.0], [46.7, 496451.0], [46.8, 496790.0], [46.9, 496837.0], [47.0, 496901.0], [47.1, 497025.0], [47.2, 497293.0], [47.3, 497497.0], [47.4, 497637.0], [47.5, 497653.0], [47.6, 497784.0], [47.7, 497892.0], [47.8, 497913.0], [47.9, 497938.0], [48.0, 498411.0], [48.1, 498451.0], [48.2, 499048.0], [48.3, 499855.0], [48.4, 500953.0], [48.5, 502418.0], [48.6, 504174.0], [48.7, 504348.0], [48.8, 504443.0], [48.9, 504668.0], [49.0, 504922.0], [49.1, 505412.0], [49.2, 506715.0], [49.3, 506835.0], [49.4, 507125.0], [49.5, 507885.0], [49.6, 508364.0], [49.7, 508700.0], [49.8, 508882.0], [49.9, 509039.0], [50.0, 509290.0], [50.1, 509498.0], [50.2, 509576.0], [50.3, 509676.0], [50.4, 509861.0], [50.5, 509871.0], [50.6, 510000.0], [50.7, 510048.0], [50.8, 510082.0], [50.9, 510126.0], [51.0, 510163.0], [51.1, 510168.0], [51.2, 510202.0], [51.3, 510417.0], [51.4, 510657.0], [51.5, 510736.0], [51.6, 510998.0], [51.7, 511040.0], [51.8, 511468.0], [51.9, 511853.0], [52.0, 512024.0], [52.1, 512459.0], [52.2, 512649.0], [52.3, 512797.0], [52.4, 512960.0], [52.5, 513573.0], [52.6, 514697.0], [52.7, 515953.0], [52.8, 516334.0], [52.9, 516851.0], [53.0, 517091.0], [53.1, 517610.0], [53.2, 518159.0], [53.3, 518469.0], [53.4, 518988.0], [53.5, 519714.0], [53.6, 520173.0], [53.7, 520505.0], [53.8, 520980.0], [53.9, 521201.0], [54.0, 521799.0], [54.1, 522255.0], [54.2, 522305.0], [54.3, 522545.0], [54.4, 522830.0], [54.5, 523408.0], [54.6, 523777.0], [54.7, 524230.0], [54.8, 524784.0], [54.9, 524817.0], [55.0, 524977.0], [55.1, 525318.0], [55.2, 525495.0], [55.3, 525553.0], [55.4, 525596.0], [55.5, 525643.0], [55.6, 526115.0], [55.7, 526589.0], [55.8, 526626.0], [55.9, 526789.0], [56.0, 527316.0], [56.1, 527754.0], [56.2, 527765.0], [56.3, 527818.0], [56.4, 527945.0], [56.5, 528221.0], [56.6, 528360.0], [56.7, 528407.0], [56.8, 528764.0], [56.9, 528895.0], [57.0, 529401.0], [57.1, 529586.0], [57.2, 529773.0], [57.3, 530204.0], [57.4, 530499.0], [57.5, 530820.0], [57.6, 530846.0], [57.7, 531007.0], [57.8, 531709.0], [57.9, 532370.0], [58.0, 532939.0], [58.1, 533045.0], [58.2, 533575.0], [58.3, 533958.0], [58.4, 534186.0], [58.5, 534279.0], [58.6, 534495.0], [58.7, 535740.0], [58.8, 536127.0], [58.9, 536234.0], [59.0, 536989.0], [59.1, 537611.0], [59.2, 537832.0], [59.3, 537973.0], [59.4, 538055.0], [59.5, 538080.0], [59.6, 538511.0], [59.7, 538708.0], [59.8, 538893.0], [59.9, 538945.0], [60.0, 539056.0], [60.1, 539248.0], [60.2, 539570.0], [60.3, 539609.0], [60.4, 539707.0], [60.5, 539762.0], [60.6, 540283.0], [60.7, 540437.0], [60.8, 540929.0], [60.9, 541995.0], [61.0, 542393.0], [61.1, 543074.0], [61.2, 544465.0], [61.3, 545237.0], [61.4, 547398.0], [61.5, 547707.0], [61.6, 547809.0], [61.7, 548118.0], [61.8, 548582.0], [61.9, 549121.0], [62.0, 550214.0], [62.1, 550746.0], [62.2, 550811.0], [62.3, 551316.0], [62.4, 551394.0], [62.5, 552684.0], [62.6, 552707.0], [62.7, 553078.0], [62.8, 554259.0], [62.9, 555091.0], [63.0, 555373.0], [63.1, 555528.0], [63.2, 555596.0], [63.3, 556013.0], [63.4, 556112.0], [63.5, 556267.0], [63.6, 556594.0], [63.7, 556897.0], [63.8, 557009.0], [63.9, 557304.0], [64.0, 557616.0], [64.1, 557655.0], [64.2, 558285.0], [64.3, 558817.0], [64.4, 558962.0], [64.5, 558985.0], [64.6, 559088.0], [64.7, 559167.0], [64.8, 559327.0], [64.9, 559473.0], [65.0, 559506.0], [65.1, 559820.0], [65.2, 560722.0], [65.3, 560969.0], [65.4, 561100.0], [65.5, 561367.0], [65.6, 561408.0], [65.7, 561494.0], [65.8, 561547.0], [65.9, 561594.0], [66.0, 561703.0], [66.1, 561938.0], [66.2, 562214.0], [66.3, 562460.0], [66.4, 562585.0], [66.5, 562601.0], [66.6, 563480.0], [66.7, 564496.0], [66.8, 564896.0], [66.9, 565132.0], [67.0, 565325.0], [67.1, 565972.0], [67.2, 566473.0], [67.3, 566757.0], [67.4, 566803.0], [67.5, 567946.0], [67.6, 568483.0], [67.7, 569181.0], [67.8, 570258.0], [67.9, 570480.0], [68.0, 570669.0], [68.1, 571251.0], [68.2, 571296.0], [68.3, 571495.0], [68.4, 572388.0], [68.5, 572739.0], [68.6, 572969.0], [68.7, 573379.0], [68.8, 573480.0], [68.9, 574855.0], [69.0, 575600.0], [69.1, 575800.0], [69.2, 575977.0], [69.3, 576240.0], [69.4, 577496.0], [69.5, 577936.0], [69.6, 578008.0], [69.7, 578493.0], [69.8, 578921.0], [69.9, 579341.0], [70.0, 579450.0], [70.1, 579545.0], [70.2, 579742.0], [70.3, 580350.0], [70.4, 580555.0], [70.5, 581128.0], [70.6, 581280.0], [70.7, 581839.0], [70.8, 581862.0], [70.9, 581990.0], [71.0, 582328.0], [71.1, 582395.0], [71.2, 582629.0], [71.3, 583475.0], [71.4, 583905.0], [71.5, 584281.0], [71.6, 584412.0], [71.7, 584790.0], [71.8, 585093.0], [71.9, 585498.0], [72.0, 585762.0], [72.1, 585906.0], [72.2, 586058.0], [72.3, 586391.0], [72.4, 586599.0], [72.5, 586636.0], [72.6, 586760.0], [72.7, 586832.0], [72.8, 587036.0], [72.9, 587116.0], [73.0, 587221.0], [73.1, 587363.0], [73.2, 587644.0], [73.3, 587984.0], [73.4, 588113.0], [73.5, 589496.0], [73.6, 589775.0], [73.7, 590477.0], [73.8, 591083.0], [73.9, 591428.0], [74.0, 592786.0], [74.1, 592900.0], [74.2, 592995.0], [74.3, 593094.0], [74.4, 593383.0], [74.5, 593651.0], [74.6, 594089.0], [74.7, 594481.0], [74.8, 594948.0], [74.9, 595591.0], [75.0, 597175.0], [75.1, 597473.0], [75.2, 597680.0], [75.3, 598587.0], [75.4, 598767.0], [75.5, 600298.0], [75.6, 600526.0], [75.7, 600665.0], [75.8, 600996.0], [75.9, 601785.0], [76.0, 602225.0], [76.1, 603150.0], [76.2, 603980.0], [76.3, 604077.0], [76.4, 604983.0], [76.5, 606212.0], [76.6, 607200.0], [76.7, 607763.0], [76.8, 608530.0], [76.9, 609317.0], [77.0, 609379.0], [77.1, 609873.0], [77.2, 610291.0], [77.3, 610369.0], [77.4, 611440.0], [77.5, 612094.0], [77.6, 612904.0], [77.7, 613125.0], [77.8, 613511.0], [77.9, 613625.0], [78.0, 614203.0], [78.1, 615684.0], [78.2, 616483.0], [78.3, 617042.0], [78.4, 617081.0], [78.5, 617415.0], [78.6, 617520.0], [78.7, 617799.0], [78.8, 618032.0], [78.9, 618288.0], [79.0, 618601.0], [79.1, 618620.0], [79.2, 619453.0], [79.3, 619803.0], [79.4, 620378.0], [79.5, 620599.0], [79.6, 621083.0], [79.7, 621179.0], [79.8, 621598.0], [79.9, 622693.0], [80.0, 622861.0], [80.1, 623627.0], [80.2, 624586.0], [80.3, 625198.0], [80.4, 626264.0], [80.5, 626804.0], [80.6, 627279.0], [80.7, 627463.0], [80.8, 627574.0], [80.9, 628191.0], [81.0, 628230.0], [81.1, 629452.0], [81.2, 630219.0], [81.3, 631540.0], [81.4, 632030.0], [81.5, 632155.0], [81.6, 632216.0], [81.7, 632406.0], [81.8, 632776.0], [81.9, 633292.0], [82.0, 633906.0], [82.1, 634291.0], [82.2, 636886.0], [82.3, 637203.0], [82.4, 637504.0], [82.5, 639229.0], [82.6, 639403.0], [82.7, 639501.0], [82.8, 639995.0], [82.9, 640125.0], [83.0, 640643.0], [83.1, 640840.0], [83.2, 641038.0], [83.3, 642113.0], [83.4, 642329.0], [83.5, 642544.0], [83.6, 642706.0], [83.7, 643167.0], [83.8, 643634.0], [83.9, 643826.0], [84.0, 644410.0], [84.1, 644695.0], [84.2, 645534.0], [84.3, 646084.0], [84.4, 646505.0], [84.5, 646874.0], [84.6, 647406.0], [84.7, 647608.0], [84.8, 648723.0], [84.9, 648910.0], [85.0, 649251.0], [85.1, 649474.0], [85.2, 649765.0], [85.3, 649792.0], [85.4, 650393.0], [85.5, 650890.0], [85.6, 651985.0], [85.7, 652395.0], [85.8, 652841.0], [85.9, 654933.0], [86.0, 655121.0], [86.1, 655266.0], [86.2, 656140.0], [86.3, 656294.0], [86.4, 656358.0], [86.5, 657136.0], [86.6, 657745.0], [86.7, 658161.0], [86.8, 658244.0], [86.9, 658919.0], [87.0, 659006.0], [87.1, 659406.0], [87.2, 659697.0], [87.3, 659999.0], [87.4, 660039.0], [87.5, 660614.0], [87.6, 660963.0], [87.7, 661616.0], [87.8, 662374.0], [87.9, 664536.0], [88.0, 665257.0], [88.1, 665430.0], [88.2, 666096.0], [88.3, 667349.0], [88.4, 667452.0], [88.5, 667598.0], [88.6, 668198.0], [88.7, 668258.0], [88.8, 668509.0], [88.9, 668588.0], [89.0, 668672.0], [89.1, 668717.0], [89.2, 668821.0], [89.3, 668849.0], [89.4, 669249.0], [89.5, 669311.0], [89.6, 669329.0], [89.7, 670451.0], [89.8, 671466.0], [89.9, 672949.0], [90.0, 674450.0], [90.1, 675323.0], [90.2, 676114.0], [90.3, 677190.0], [90.4, 678120.0], [90.5, 678525.0], [90.6, 679085.0], [90.7, 679492.0], [90.8, 679797.0], [90.9, 680288.0], [91.0, 681213.0], [91.1, 681385.0], [91.2, 681498.0], [91.3, 681754.0], [91.4, 682435.0], [91.5, 682464.0], [91.6, 685751.0], [91.7, 689055.0], [91.8, 692100.0], [91.9, 693286.0], [92.0, 693981.0], [92.1, 694718.0], [92.2, 694732.0], [92.3, 695878.0], [92.4, 696391.0], [92.5, 696441.0], [92.6, 697810.0], [92.7, 698220.0], [92.8, 699736.0], [92.9, 699839.0], [93.0, 699900.0], [93.1, 699962.0], [93.2, 700321.0], [93.3, 702295.0], [93.4, 703478.0], [93.5, 703568.0], [93.6, 704081.0], [93.7, 704586.0], [93.8, 706283.0], [93.9, 706314.0], [94.0, 709290.0], [94.1, 709615.0], [94.2, 710077.0], [94.3, 711621.0], [94.4, 712719.0], [94.5, 714042.0], [94.6, 714626.0], [94.7, 715307.0], [94.8, 715694.0], [94.9, 716245.0], [95.0, 716689.0], [95.1, 719269.0], [95.2, 722083.0], [95.3, 725350.0], [95.4, 726102.0], [95.5, 726456.0], [95.6, 727057.0], [95.7, 729026.0], [95.8, 730691.0], [95.9, 731157.0], [96.0, 731268.0], [96.1, 731274.0], [96.2, 731445.0], [96.3, 734315.0], [96.4, 735450.0], [96.5, 736602.0], [96.6, 743790.0], [96.7, 744473.0], [96.8, 745537.0], [96.9, 749341.0], [97.0, 750296.0], [97.1, 751394.0], [97.2, 751935.0], [97.3, 756575.0], [97.4, 759901.0], [97.5, 760423.0], [97.6, 761355.0], [97.7, 761542.0], [97.8, 761813.0], [97.9, 761936.0], [98.0, 762014.0], [98.1, 764495.0], [98.2, 766823.0], [98.3, 769407.0], [98.4, 772793.0], [98.5, 772967.0], [98.6, 774292.0], [98.7, 779092.0], [98.8, 784278.0], [98.9, 784717.0], [99.0, 786386.0], [99.1, 786472.0], [99.2, 796641.0], [99.3, 819058.0], [99.4, 819623.0], [99.5, 830065.0], [99.6, 831794.0], [99.7, 833674.0], [99.8, 864732.0], [99.9, 888185.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 7.0, "series": [{"data": [[0.0, 1.0], [659600.0, 2.0], [762000.0, 2.0], [199200.0, 2.0], [561300.0, 3.0], [504900.0, 1.0], [398400.0, 1.0], [424000.0, 2.0], [620700.0, 1.0], [449600.0, 1.0], [475200.0, 2.0], [254500.0, 1.0], [600200.0, 1.0], [95500.0, 1.0], [457800.0, 1.0], [114700.0, 1.0], [655500.0, 1.0], [483400.0, 1.0], [509000.0, 2.0], [538800.0, 1.0], [169000.0, 1.0], [393300.0, 1.0], [444500.0, 1.0], [645300.0, 1.0], [649400.0, 2.0], [440400.0, 1.0], [491600.0, 1.0], [299100.0, 1.0], [526500.0, 1.0], [200.0, 1.0], [478300.0, 1.0], [731300.0, 1.0], [269400.0, 1.0], [581800.0, 3.0], [300.0, 1.0], [320600.0, 1.0], [735400.0, 1.0], [97800.0, 1.0], [585900.0, 2.0], [423000.0, 1.0], [448600.0, 1.0], [637100.0, 1.0], [123400.0, 1.0], [499800.0, 1.0], [500.0, 1.0], [831700.0, 1.0], [622800.0, 1.0], [164400.0, 1.0], [700.0, 1.0], [435300.0, 1.0], [215600.0, 1.0], [678100.0, 1.0], [486500.0, 1.0], [788700.0, 1.0], [1100.0, 2.0], [579800.0, 1.0], [1200.0, 1.0], [631000.0, 1.0], [1300.0, 1.0], [1400.0, 1.0], [784600.0, 1.0], [1600.0, 1.0], [583900.0, 1.0], [431200.0, 1.0], [456800.0, 1.0], [555200.0, 1.0], [289900.0, 3.0], [3000.0, 1.0], [760000.0, 1.0], [3200.0, 2.0], [559300.0, 2.0], [3400.0, 1.0], [3600.0, 1.0], [232500.0, 1.0], [494700.0, 1.0], [4000.0, 1.0], [4400.0, 1.0], [563400.0, 1.0], [5200.0, 1.0], [5600.0, 2.0], [87300.0, 1.0], [6400.0, 1.0], [604400.0, 1.0], [323700.0, 1.0], [198200.0, 2.0], [557300.0, 1.0], [608500.0, 1.0], [451700.0, 1.0], [659700.0, 1.0], [268400.0, 1.0], [561400.0, 3.0], [19200.0, 1.0], [22400.0, 1.0], [447600.0, 1.0], [588000.0, 1.0], [639200.0, 2.0], [540900.0, 1.0], [592100.0, 1.0], [545000.0, 1.0], [647400.0, 2.0], [89600.0, 1.0], [549100.0, 1.0], [600300.0, 1.0], [455800.0, 1.0], [528400.0, 2.0], [583700.0, 1.0], [217600.0, 1.0], [686100.0, 1.0], [230400.0, 1.0], [490500.0, 1.0], [516100.0, 1.0], [587800.0, 1.0], [307200.0, 1.0], [643100.0, 2.0], [486400.0, 1.0], [745500.0, 1.0], [512000.0, 2.0], [183300.0, 2.0], [421900.0, 1.0], [260100.0, 1.0], [571400.0, 1.0], [622600.0, 1.0], [673800.0, 1.0], [392200.0, 1.0], [776200.0, 1.0], [469000.0, 2.0], [520200.0, 1.0], [663600.0, 1.0], [714800.0, 1.0], [174600.0, 1.0], [565300.0, 1.0], [455700.0, 1.0], [667700.0, 1.0], [506900.0, 1.0], [569400.0, 1.0], [374800.0, 1.0], [774200.0, 1.0], [624700.0, 1.0], [451600.0, 1.0], [477200.0, 3.0], [647200.0, 1.0], [749600.0, 1.0], [191500.0, 1.0], [204300.0, 1.0], [438300.0, 1.0], [515100.0, 1.0], [553000.0, 1.0], [75800.0, 1.0], [434200.0, 1.0], [459800.0, 1.0], [761900.0, 2.0], [511000.0, 2.0], [594000.0, 1.0], [170000.0, 1.0], [696400.0, 2.0], [221200.0, 1.0], [497700.0, 3.0], [246800.0, 1.0], [551000.0, 1.0], [602200.0, 1.0], [493600.0, 2.0], [759900.0, 1.0], [731200.0, 3.0], [530500.0, 1.0], [833600.0, 1.0], [429100.0, 2.0], [480300.0, 1.0], [538700.0, 2.0], [425000.0, 1.0], [103700.0, 1.0], [476200.0, 1.0], [501800.0, 1.0], [575600.0, 2.0], [626800.0, 1.0], [165400.0, 1.0], [579700.0, 1.0], [216600.0, 1.0], [488500.0, 2.0], [532600.0, 1.0], [279600.0, 1.0], [305200.0, 1.0], [21700.0, 1.0], [23300.0, 1.0], [24900.0, 1.0], [587900.0, 1.0], [28100.0, 1.0], [484400.0, 1.0], [510000.0, 5.0], [266300.0, 1.0], [661600.0, 1.0], [46600.0, 1.0], [563300.0, 1.0], [445500.0, 1.0], [496700.0, 2.0], [522300.0, 2.0], [567400.0, 1.0], [618600.0, 3.0], [390200.0, 1.0], [622700.0, 1.0], [467000.0, 2.0], [492600.0, 2.0], [518200.0, 1.0], [666000.0, 1.0], [819600.0, 1.0], [456900.0, 1.0], [482500.0, 2.0], [772500.0, 1.0], [299200.0, 1.0], [324800.0, 1.0], [725400.0, 1.0], [524700.0, 1.0], [575900.0, 1.0], [478400.0, 1.0], [179300.0, 1.0], [362700.0, 1.0], [388300.0, 1.0], [192100.0, 1.0], [551300.0, 3.0], [204900.0, 2.0], [439500.0, 1.0], [230500.0, 1.0], [490700.0, 1.0], [516300.0, 1.0], [555400.0, 1.0], [559500.0, 2.0], [486600.0, 1.0], [545200.0, 1.0], [647600.0, 1.0], [345300.0, 1.0], [600500.0, 2.0], [473300.0, 1.0], [260200.0, 1.0], [264400.0, 2.0], [290000.0, 1.0], [864700.0, 1.0], [366800.0, 1.0], [557500.0, 1.0], [659900.0, 1.0], [528800.0, 2.0], [276700.0, 1.0], [682400.0, 4.0], [532900.0, 2.0], [584100.0, 1.0], [481500.0, 2.0], [507100.0, 1.0], [588200.0, 1.0], [639400.0, 2.0], [694700.0, 3.0], [477400.0, 1.0], [130600.0, 1.0], [578000.0, 1.0], [629200.0, 1.0], [191600.0, 1.0], [530900.0, 1.0], [204400.0, 1.0], [489700.0, 3.0], [586200.0, 1.0], [306400.0, 1.0], [539100.0, 1.0], [590300.0, 1.0], [267500.0, 1.0], [561600.0, 1.0], [170100.0, 1.0], [395500.0, 1.0], [565700.0, 1.0], [221300.0, 2.0], [668100.0, 1.0], [497900.0, 4.0], [523500.0, 1.0], [621000.0, 1.0], [314600.0, 1.0], [94500.0, 1.0], [625100.0, 1.0], [493800.0, 3.0], [662000.0, 1.0], [764400.0, 1.0], [378100.0, 1.0], [429300.0, 3.0], [480500.0, 1.0], [16100.0, 2.0], [19400.0, 1.0], [619000.0, 1.0], [322800.0, 1.0], [721400.0, 1.0], [30600.0, 1.0], [594400.0, 2.0], [547300.0, 1.0], [598500.0, 1.0], [649700.0, 3.0], [488700.0, 1.0], [242300.0, 2.0], [305400.0, 1.0], [356600.0, 1.0], [555500.0, 3.0], [459000.0, 1.0], [510200.0, 2.0], [288900.0, 1.0], [586000.0, 1.0], [637200.0, 2.0], [180800.0, 1.0], [193600.0, 1.0], [538900.0, 2.0], [468100.0, 1.0], [743700.0, 1.0], [493700.0, 1.0], [543000.0, 1.0], [387200.0, 1.0], [649500.0, 1.0], [489600.0, 1.0], [751900.0, 1.0], [450700.0, 2.0], [223300.0, 1.0], [676100.0, 1.0], [261700.0, 1.0], [526600.0, 3.0], [577800.0, 1.0], [293000.0, 1.0], [680200.0, 1.0], [731400.0, 1.0], [421000.0, 1.0], [581900.0, 2.0], [633100.0, 1.0], [497800.0, 1.0], [523400.0, 1.0], [279700.0, 1.0], [571700.0, 1.0], [214600.0, 1.0], [725300.0, 1.0], [510100.0, 7.0], [524600.0, 1.0], [275600.0, 1.0], [575800.0, 2.0], [301200.0, 1.0], [627000.0, 1.0], [678200.0, 1.0], [528700.0, 1.0], [454800.0, 2.0], [784700.0, 1.0], [287900.0, 1.0], [313500.0, 1.0], [167500.0, 1.0], [180300.0, 1.0], [51100.0, 1.0], [555300.0, 1.0], [657700.0, 1.0], [467100.0, 1.0], [492700.0, 3.0], [559400.0, 2.0], [76600.0, 1.0], [437400.0, 1.0], [463000.0, 2.0], [488600.0, 1.0], [717100.0, 1.0], [197200.0, 1.0], [424100.0, 1.0], [500900.0, 1.0], [261200.0, 1.0], [292000.0, 1.0], [608600.0, 1.0], [420000.0, 1.0], [561500.0, 4.0], [612700.0, 1.0], [471200.0, 1.0], [496800.0, 2.0], [844100.0, 1.0], [381100.0, 1.0], [406700.0, 1.0], [536900.0, 1.0], [588100.0, 1.0], [694600.0, 1.0], [91700.0, 1.0], [104500.0, 1.0], [453800.0, 1.0], [117300.0, 1.0], [123700.0, 1.0], [505000.0, 1.0], [530800.0, 3.0], [286900.0, 3.0], [154200.0, 1.0], [633200.0, 1.0], [491700.0, 1.0], [539000.0, 2.0], [308400.0, 1.0], [23500.0, 1.0], [645500.0, 1.0], [487600.0, 1.0], [696700.0, 1.0], [513200.0, 1.0], [269500.0, 1.0], [616800.0, 1.0], [719200.0, 1.0], [183900.0, 1.0], [397500.0, 1.0], [423100.0, 4.0], [474300.0, 1.0], [260700.0, 1.0], [526700.0, 1.0], [577900.0, 2.0], [470200.0, 1.0], [495800.0, 1.0], [357700.0, 1.0], [485700.0, 1.0], [240800.0, 1.0], [578200.0, 1.0], [302400.0, 1.0], [629400.0, 1.0], [582300.0, 3.0], [456000.0, 1.0], [340300.0, 1.0], [391500.0, 2.0], [660100.0, 1.0], [519500.0, 1.0], [715400.0, 1.0], [565900.0, 1.0], [489800.0, 1.0], [602800.0, 1.0], [197800.0, 1.0], [210600.0, 1.0], [658100.0, 2.0], [476500.0, 1.0], [559800.0, 1.0], [293200.0, 2.0], [764600.0, 1.0], [563900.0, 1.0], [446800.0, 2.0], [586400.0, 1.0], [40100.0, 1.0], [201900.0, 1.0], [214700.0, 1.0], [484700.0, 1.0], [240300.0, 1.0], [594600.0, 1.0], [598700.0, 2.0], [429400.0, 1.0], [455000.0, 1.0], [533200.0, 1.0], [584400.0, 1.0], [313700.0, 1.0], [193200.0, 1.0], [416100.0, 2.0], [441700.0, 1.0], [492900.0, 1.0], [643800.0, 1.0], [695000.0, 1.0], [437600.0, 1.0], [171700.0, 1.0], [670400.0, 1.0], [449900.0, 1.0], [475500.0, 1.0], [4100.0, 1.0], [576200.0, 1.0], [292200.0, 1.0], [627400.0, 3.0], [6500.0, 2.0], [580300.0, 2.0], [631500.0, 1.0], [7300.0, 1.0], [471400.0, 1.0], [497000.0, 1.0], [566000.0, 1.0], [668400.0, 1.0], [11400.0, 1.0], [381300.0, 1.0], [621300.0, 1.0], [483700.0, 2.0], [16200.0, 2.0], [19600.0, 1.0], [21200.0, 1.0], [779000.0, 1.0], [428400.0, 1.0], [454000.0, 1.0], [30800.0, 1.0], [36000.0, 2.0], [287100.0, 1.0], [312700.0, 1.0], [192700.0, 1.0], [604900.0, 1.0], [466300.0, 2.0], [656100.0, 2.0], [231100.0, 1.0], [359800.0, 1.0], [561900.0, 1.0], [613100.0, 1.0], [462200.0, 1.0], [266500.0, 2.0], [292100.0, 1.0], [643600.0, 2.0], [445700.0, 1.0], [233600.0, 1.0], [496900.0, 2.0], [522500.0, 1.0], [259200.0, 1.0], [549400.0, 1.0], [600600.0, 1.0], [313600.0, 1.0], [339200.0, 1.0], [703000.0, 1.0], [390400.0, 1.0], [754200.0, 1.0], [805400.0, 1.0], [416000.0, 1.0], [492800.0, 2.0], [518400.0, 1.0], [524800.0, 2.0], [148100.0, 1.0], [300300.0, 1.0], [627200.0, 1.0], [528900.0, 1.0], [533000.0, 1.0], [584200.0, 1.0], [373000.0, 1.0], [398600.0, 1.0], [639500.0, 2.0], [475400.0, 1.0], [119900.0, 1.0], [676400.0, 1.0], [385300.0, 1.0], [203400.0, 1.0], [830000.0, 1.0], [229000.0, 1.0], [462100.0, 2.0], [531000.0, 1.0], [582200.0, 1.0], [633400.0, 1.0], [586300.0, 1.0], [637500.0, 1.0], [483600.0, 1.0], [509200.0, 1.0], [557600.0, 4.0], [660000.0, 2.0], [419100.0, 1.0], [561700.0, 2.0], [612900.0, 2.0], [57900.0, 1.0], [715300.0, 1.0], [495900.0, 1.0], [617000.0, 4.0], [668200.0, 2.0], [389400.0, 1.0], [103000.0, 1.0], [621100.0, 2.0], [440600.0, 1.0], [517400.0, 1.0], [147600.0, 1.0], [606800.0, 1.0], [658000.0, 1.0], [709200.0, 1.0], [760400.0, 1.0], [427300.0, 1.0], [452900.0, 1.0], [504100.0, 1.0], [372000.0, 2.0], [397600.0, 1.0], [819800.0, 1.0], [567900.0, 1.0], [423200.0, 1.0], [772700.0, 1.0], [539200.0, 1.0], [590400.0, 1.0], [649800.0, 1.0], [457000.0, 1.0], [482600.0, 1.0], [643700.0, 1.0], [469300.0, 3.0], [245400.0, 2.0], [494900.0, 2.0], [520500.0, 1.0], [337200.0, 1.0], [22100.0, 1.0], [750200.0, 1.0], [600700.0, 1.0], [651900.0, 1.0], [37800.0, 1.0], [298300.0, 1.0], [323900.0, 1.0], [674400.0, 1.0], [375100.0, 1.0], [524900.0, 2.0], [576100.0, 1.0], [451900.0, 1.0], [678500.0, 1.0], [60200.0, 1.0], [477500.0, 1.0], [294200.0, 1.0], [88400.0, 1.0], [371000.0, 1.0], [584300.0, 1.0], [107600.0, 1.0], [473400.0, 1.0], [120400.0, 1.0], [499000.0, 1.0], [165600.0, 1.0], [191200.0, 1.0], [580500.0, 1.0], [463300.0, 1.0], [242400.0, 1.0], [280000.0, 1.0], [382400.0, 2.0], [537500.0, 1.0], [639900.0, 1.0], [510400.0, 2.0], [266700.0, 1.0], [292300.0, 1.0], [611200.0, 1.0], [169700.0, 1.0], [713600.0, 1.0], [522700.0, 1.0], [288200.0, 1.0], [619400.0, 1.0], [390600.0, 1.0], [572300.0, 1.0], [416200.0, 1.0], [467400.0, 3.0], [493000.0, 1.0], [518600.0, 1.0], [711600.0, 1.0], [562100.0, 1.0], [664500.0, 1.0], [617400.0, 2.0], [322000.0, 1.0], [668600.0, 3.0], [424400.0, 2.0], [621500.0, 1.0], [450000.0, 1.0], [283100.0, 1.0], [592800.0, 1.0], [545700.0, 1.0], [53300.0, 1.0], [436700.0, 2.0], [229100.0, 1.0], [241900.0, 1.0], [513500.0, 1.0], [304600.0, 1.0], [703400.0, 2.0], [458200.0, 1.0], [656300.0, 2.0], [509400.0, 2.0], [539600.0, 2.0], [693200.0, 1.0], [368100.0, 1.0], [744400.0, 1.0], [182000.0, 1.0], [393700.0, 1.0], [594900.0, 1.0], [444900.0, 1.0], [646100.0, 1.0], [470500.0, 1.0], [246000.0, 2.0], [521700.0, 1.0], [547800.0, 1.0], [287200.0, 1.0], [603100.0, 2.0], [440800.0, 1.0], [466400.0, 1.0], [517600.0, 1.0], [160500.0, 1.0], [625600.0, 1.0], [325100.0, 1.0], [527300.0, 1.0], [211700.0, 1.0], [504300.0, 2.0], [582600.0, 1.0], [295400.0, 1.0], [89700.0, 1.0], [397800.0, 1.0], [586700.0, 3.0], [572400.0, 1.0], [307700.0, 2.0], [623600.0, 1.0], [10700.0, 1.0], [525300.0, 1.0], [13900.0, 1.0], [627700.0, 1.0], [14700.0, 1.0], [678900.0, 1.0], [241400.0, 1.0], [512500.0, 1.0], [529400.0, 2.0], [303600.0, 1.0], [19800.0, 1.0], [631800.0, 1.0], [734200.0, 1.0], [533500.0, 1.0], [584700.0, 1.0], [431600.0, 1.0], [457200.0, 1.0], [482800.0, 3.0], [556000.0, 2.0], [290300.0, 2.0], [607200.0, 1.0], [709600.0, 3.0], [194300.0, 1.0], [443900.0, 1.0], [245500.0, 1.0], [363000.0, 1.0], [98400.0, 1.0], [568300.0, 1.0], [619500.0, 1.0], [871400.0, 1.0], [439800.0, 1.0], [491000.0, 2.0], [547600.0, 1.0], [269700.0, 3.0], [158400.0, 1.0], [701200.0, 1.0], [196800.0, 1.0], [448900.0, 1.0], [222400.0, 1.0], [500100.0, 1.0], [248000.0, 1.0], [756500.0, 1.0], [555800.0, 1.0], [265600.0, 2.0], [658200.0, 1.0], [342400.0, 1.0], [470400.0, 1.0], [662300.0, 1.0], [521600.0, 1.0], [329100.0, 1.0], [175300.0, 1.0], [380300.0, 1.0], [405900.0, 1.0], [586500.0, 1.0], [482700.0, 1.0], [508300.0, 2.0], [539400.0, 1.0], [82300.0, 1.0], [645900.0, 1.0], [504200.0, 1.0], [286100.0, 1.0], [388500.0, 2.0], [584500.0, 1.0], [490900.0, 1.0], [435600.0, 1.0], [592700.0, 1.0], [512400.0, 1.0], [319900.0, 1.0], [422300.0, 1.0], [473500.0, 1.0], [670500.0, 1.0], [772900.0, 2.0], [260300.0, 2.0], [71800.0, 1.0], [623400.0, 1.0], [525100.0, 1.0], [418200.0, 1.0], [627500.0, 1.0], [613200.0, 1.0], [328100.0, 1.0], [715600.0, 1.0], [766800.0, 1.0], [430500.0, 1.0], [456100.0, 1.0], [668500.0, 3.0], [507300.0, 1.0], [251600.0, 1.0], [570200.0, 1.0], [324000.0, 1.0], [672600.0, 1.0], [400800.0, 1.0], [574300.0, 1.0], [153300.0, 1.0], [166100.0, 1.0], [191700.0, 1.0], [204500.0, 1.0], [600900.0, 1.0], [652100.0, 1.0], [464300.0, 1.0], [242900.0, 1.0], [656200.0, 1.0], [86900.0, 1.0], [434600.0, 1.0], [511400.0, 2.0], [646000.0, 1.0], [170200.0, 1.0], [547700.0, 2.0], [446900.0, 1.0], [523700.0, 1.0], [658300.0, 1.0], [494000.0, 1.0], [527200.0, 1.0], [578400.0, 1.0], [680800.0, 1.0], [531300.0, 1.0], [582500.0, 1.0], [429500.0, 1.0], [480700.0, 2.0], [586600.0, 2.0], [689000.0, 1.0], [399800.0, 1.0], [539500.0, 2.0], [641900.0, 1.0], [693100.0, 1.0], [476600.0, 1.0], [744300.0, 1.0], [338500.0, 1.0], [535700.0, 1.0], [440900.0, 1.0], [466500.0, 2.0], [231200.0, 1.0], [591000.0, 2.0], [436800.0, 1.0], [269900.0, 1.0], [566400.0, 1.0], [617600.0, 1.0], [668800.0, 3.0], [171300.0, 1.0], [672900.0, 1.0], [260900.0, 1.0], [265800.0, 1.0], [73100.0, 1.0], [317000.0, 1.0], [779400.0, 1.0], [578700.0, 1.0], [564400.0, 1.0], [615600.0, 1.0], [175400.0, 1.0], [769200.0, 1.0], [380500.0, 1.0], [252200.0, 1.0], [299600.0, 1.0], [525500.0, 4.0], [427600.0, 1.0], [504400.0, 2.0], [388700.0, 1.0], [192300.0, 1.0], [491100.0, 1.0], [243500.0, 1.0], [256300.0, 1.0], [556200.0, 1.0], [75400.0, 1.0], [560300.0, 1.0], [611500.0, 1.0], [461400.0, 1.0], [512600.0, 2.0], [132400.0, 1.0], [268900.0, 1.0], [648400.0, 1.0], [699600.0, 1.0], [371300.0, 2.0], [448100.0, 1.0], [499300.0, 1.0], [260400.0, 1.0], [554200.0, 2.0], [707800.0, 1.0], [558300.0, 1.0], [520800.0, 1.0], [529600.0, 1.0], [277100.0, 1.0], [632000.0, 1.0], [2700.0, 1.0], [174900.0, 2.0], [2900.0, 2.0], [3100.0, 1.0], [533700.0, 1.0], [405100.0, 1.0], [3300.0, 1.0], [584900.0, 1.0], [3500.0, 3.0], [226100.0, 1.0], [456300.0, 1.0], [3700.0, 1.0], [537800.0, 1.0], [5400.0, 1.0], [90500.0, 1.0], [6200.0, 1.0], [541900.0, 1.0], [103300.0, 1.0], [426600.0, 2.0], [7000.0, 1.0], [644300.0, 1.0], [527600.0, 1.0], [630000.0, 1.0], [681200.0, 1.0], [179000.0, 1.0], [531700.0, 1.0], [438900.0, 1.0], [490100.0, 1.0], [15600.0, 2.0], [736500.0, 1.0], [255800.0, 2.0], [587000.0, 3.0], [638200.0, 1.0], [383600.0, 1.0], [409200.0, 1.0], [591100.0, 1.0], [642300.0, 3.0], [460400.0, 1.0], [486000.0, 2.0], [36800.0, 1.0], [562400.0, 1.0], [293500.0, 1.0], [613600.0, 1.0], [40000.0, 1.0], [566500.0, 1.0], [617700.0, 1.0], [234300.0, 1.0], [498300.0, 1.0], [570600.0, 2.0], [289400.0, 1.0], [417400.0, 1.0], [677100.0, 1.0], [400900.0, 1.0], [609300.0, 3.0], [426500.0, 1.0], [224000.0, 1.0], [711700.0, 1.0], [562200.0, 1.0], [617500.0, 1.0], [668700.0, 2.0], [473600.0, 1.0], [537600.0, 2.0], [306700.0, 1.0], [640000.0, 1.0], [332300.0, 1.0], [592900.0, 3.0], [485900.0, 1.0], [430600.0, 1.0], [108700.0, 1.0], [652300.0, 1.0], [703500.0, 1.0], [263700.0, 1.0], [586800.0, 1.0], [289300.0, 1.0], [193800.0, 2.0], [539700.0, 3.0], [642100.0, 1.0], [693300.0, 1.0], [245000.0, 1.0], [519700.0, 1.0], [543800.0, 1.0], [387600.0, 1.0], [547900.0, 1.0], [599100.0, 1.0], [650300.0, 1.0], [464400.0, 1.0], [490000.0, 1.0], [570400.0, 2.0], [830500.0, 1.0], [49100.0, 1.0], [476700.0, 1.0], [728100.0, 1.0], [319000.0, 1.0], [633900.0, 2.0], [523800.0, 1.0], [568400.0, 1.0], [305700.0, 1.0], [722000.0, 1.0], [382500.0, 2.0], [408100.0, 1.0], [433700.0, 1.0], [674900.0, 1.0], [484900.0, 1.0], [726100.0, 1.0], [253200.0, 1.0], [525400.0, 2.0], [679000.0, 1.0], [529500.0, 1.0], [455200.0, 1.0], [480800.0, 1.0], [734300.0, 1.0], [193300.0, 1.0], [556100.0, 2.0], [416300.0, 1.0], [607300.0, 1.0], [467500.0, 1.0], [231700.0, 1.0], [611400.0, 1.0], [463400.0, 2.0], [514600.0, 1.0], [171800.0, 1.0], [475700.0, 1.0], [266800.0, 1.0], [558200.0, 1.0], [609400.0, 1.0], [20900.0, 2.0], [660600.0, 2.0], [25700.0, 1.0], [562300.0, 1.0], [420400.0, 1.0], [613500.0, 2.0], [446000.0, 1.0], [471600.0, 1.0], [715900.0, 1.0], [497200.0, 2.0], [32100.0, 1.0], [522800.0, 2.0], [279100.0, 1.0], [175900.0, 1.0], [188700.0, 1.0], [201500.0, 1.0], [640100.0, 1.0], [458300.0, 2.0], [943200.0, 1.0], [483900.0, 1.0], [239900.0, 1.0], [509500.0, 3.0], [541800.0, 1.0], [593000.0, 2.0], [597100.0, 1.0], [454200.0, 1.0], [479800.0, 1.0], [505400.0, 1.0], [538000.0, 5.0], [341700.0, 1.0], [542100.0, 1.0], [593300.0, 2.0], [495300.0, 1.0], [520900.0, 1.0], [286400.0, 1.0], [597400.0, 2.0], [699800.0, 3.0], [751000.0, 1.0], [388800.0, 1.0], [465600.0, 1.0], [703900.0, 1.0], [491200.0, 1.0], [516800.0, 2.0], [273100.0, 1.0], [726400.0, 2.0], [525700.0, 1.0], [628100.0, 2.0], [477900.0, 1.0], [730500.0, 1.0], [529800.0, 1.0], [632200.0, 2.0], [785800.0, 1.0], [533900.0, 1.0], [281300.0, 1.0], [434900.0, 2.0], [460500.0, 1.0], [486100.0, 1.0], [527800.0, 2.0], [630200.0, 1.0], [681400.0, 1.0], [583100.0, 1.0], [554400.0, 1.0], [263900.0, 1.0], [38100.0, 1.0], [605600.0, 1.0], [656800.0, 1.0], [193900.0, 3.0], [660900.0, 2.0], [60500.0, 1.0], [519900.0, 1.0], [562600.0, 1.0], [285400.0, 1.0], [76200.0, 1.0], [716200.0, 2.0], [566700.0, 1.0], [490200.0, 1.0], [297700.0, 2.0], [757200.0, 1.0], [556500.0, 1.0], [607700.0, 1.0], [451300.0, 1.0], [658900.0, 2.0], [761300.0, 2.0], [615900.0, 1.0], [447200.0, 1.0], [498400.0, 3.0], [536000.0, 1.0], [587200.0, 3.0], [280300.0, 1.0], [642500.0, 1.0], [240500.0, 1.0], [510700.0, 1.0], [646600.0, 1.0], [697800.0, 1.0], [534000.0, 1.0], [142200.0, 1.0], [11700.0, 1.0], [14100.0, 1.0], [691700.0, 1.0], [742900.0, 1.0], [518900.0, 1.0], [593400.0, 1.0], [644600.0, 1.0], [695800.0, 1.0], [386800.0, 1.0], [438000.0, 1.0], [597500.0, 1.0], [648700.0, 2.0], [463600.0, 2.0], [29800.0, 1.0], [699900.0, 3.0], [489200.0, 1.0], [34000.0, 1.0], [568800.0, 1.0], [322300.0, 1.0], [184700.0, 1.0], [399100.0, 1.0], [53200.0, 1.0], [572900.0, 2.0], [675300.0, 1.0], [475900.0, 1.0], [628200.0, 1.0], [679400.0, 1.0], [730600.0, 1.0], [581100.0, 2.0], [632300.0, 1.0], [446200.0, 1.0], [471800.0, 1.0], [497400.0, 2.0], [714000.0, 2.0], [429700.0, 1.0], [666900.0, 1.0], [251200.0, 1.0], [619800.0, 1.0], [323200.0, 1.0], [722200.0, 1.0], [572700.0, 1.0], [502400.0, 1.0], [726300.0, 1.0], [595200.0, 1.0], [548100.0, 1.0], [437900.0, 1.0], [489100.0, 2.0], [255300.0, 1.0], [90300.0, 1.0], [382600.0, 1.0], [485000.0, 1.0], [510600.0, 2.0], [644400.0, 2.0], [221000.0, 1.0], [446100.0, 1.0], [699700.0, 1.0], [259400.0, 2.0], [550200.0, 1.0], [652600.0, 1.0], [416400.0, 2.0], [442000.0, 1.0], [467600.0, 2.0], [493200.0, 1.0], [525600.0, 2.0], [576800.0, 1.0], [888100.0, 1.0], [679200.0, 1.0], [377500.0, 1.0], [529700.0, 1.0], [580900.0, 1.0], [428700.0, 1.0], [632100.0, 2.0], [585000.0, 1.0], [322200.0, 1.0], [537900.0, 2.0], [640300.0, 1.0], [574800.0, 1.0], [165200.0, 2.0], [190800.0, 1.0], [527700.0, 4.0], [578900.0, 1.0], [462500.0, 2.0], [681300.0, 3.0], [488100.0, 1.0], [634200.0, 1.0], [330400.0, 1.0], [736600.0, 1.0], [407200.0, 1.0], [587100.0, 1.0], [509600.0, 1.0], [562500.0, 3.0], [246100.0, 1.0], [617800.0, 1.0], [621900.0, 1.0], [441000.0, 1.0], [120500.0, 2.0], [492200.0, 1.0], [556400.0, 1.0], [710000.0, 1.0], [376500.0, 1.0], [761200.0, 1.0], [478900.0, 1.0], [564600.0, 1.0], [295600.0, 1.0], [19500.0, 1.0], [321200.0, 1.0], [346800.0, 1.0], [769400.0, 1.0], [398000.0, 1.0], [474800.0, 1.0], [32300.0, 1.0], [35800.0, 1.0], [164700.0, 1.0], [45400.0, 1.0], [646500.0, 1.0], [487100.0, 1.0], [64600.0, 2.0], [512700.0, 1.0], [103600.0, 1.0], [431800.0, 2.0], [457400.0, 1.0], [705900.0, 1.0], [544400.0, 1.0], [646800.0, 1.0], [170400.0, 1.0], [548500.0, 1.0], [472900.0, 2.0], [498500.0, 1.0], [552600.0, 3.0], [655000.0, 1.0], [706200.0, 2.0], [556700.0, 1.0], [494400.0, 1.0], [761500.0, 1.0], [579200.0, 1.0], [301900.0, 1.0], [200100.0, 1.0], [634500.0, 1.0], [685700.0, 1.0], [506700.0, 2.0], [536200.0, 1.0], [297800.0, 2.0], [374600.0, 1.0], [540300.0, 1.0], [425800.0, 2.0], [451400.0, 1.0], [642700.0, 2.0], [693900.0, 1.0], [477000.0, 2.0], [745100.0, 1.0], [284500.0, 1.0], [165800.0, 1.0], [833200.0, 1.0], [229800.0, 1.0], [534200.0, 2.0], [585400.0, 2.0], [382800.0, 1.0], [589500.0, 1.0], [640700.0, 1.0], [485200.0, 1.0], [510800.0, 1.0], [267100.0, 1.0], [560800.0, 1.0], [38500.0, 1.0], [612000.0, 1.0], [157100.0, 1.0], [44900.0, 1.0], [195500.0, 1.0], [564900.0, 1.0], [233900.0, 1.0], [667300.0, 2.0], [497500.0, 1.0], [64100.0, 2.0], [288600.0, 1.0], [671400.0, 1.0], [96200.0, 1.0], [102600.0, 1.0], [115400.0, 2.0], [467800.0, 1.0], [558800.0, 1.0], [161200.0, 1.0], [428900.0, 1.0], [454500.0, 1.0], [665300.0, 1.0], [480100.0, 1.0], [618200.0, 3.0], [424800.0, 1.0], [476000.0, 4.0], [593600.0, 1.0], [309100.0, 1.0], [178100.0, 1.0], [385900.0, 1.0], [597700.0, 1.0], [648900.0, 1.0], [751300.0, 1.0], [513900.0, 1.0], [6300.0, 1.0], [104900.0, 1.0], [657100.0, 1.0], [509800.0, 4.0], [540400.0, 1.0], [266100.0, 1.0], [595700.0, 1.0], [749300.0, 1.0], [651000.0, 1.0], [702200.0, 1.0], [552700.0, 2.0], [603900.0, 1.0], [28400.0, 1.0], [655100.0, 2.0], [706300.0, 1.0], [34400.0, 1.0], [135100.0, 1.0], [40800.0, 2.0], [626400.0, 1.0], [528100.0, 1.0], [579300.0, 2.0], [53600.0, 1.0], [427900.0, 1.0], [681700.0, 1.0], [237500.0, 1.0], [479100.0, 1.0], [532200.0, 1.0], [583400.0, 1.0], [536300.0, 1.0], [587500.0, 1.0], [475000.0, 1.0], [566800.0, 2.0], [618000.0, 1.0], [669200.0, 2.0], [188800.0, 1.0], [570900.0, 1.0], [214400.0, 1.0], [240000.0, 1.0], [509700.0, 1.0], [300800.0, 1.0], [626200.0, 1.0], [677400.0, 1.0], [527900.0, 1.0], [428800.0, 2.0], [681500.0, 1.0], [480000.0, 2.0], [287500.0, 1.0], [601600.0, 1.0], [652800.0, 1.0], [704000.0, 1.0], [364300.0, 1.0], [517900.0, 1.0], [283400.0, 1.0], [609800.0, 1.0], [613900.0, 1.0], [437000.0, 1.0], [116700.0, 1.0], [548400.0, 1.0], [650800.0, 2.0], [184200.0, 1.0], [654900.0, 2.0], [659000.0, 2.0], [560700.0, 1.0], [445200.0, 1.0], [470800.0, 3.0], [496400.0, 1.0], [536100.0, 2.0], [587300.0, 1.0], [252300.0, 1.0], [508700.0, 1.0], [540200.0, 2.0], [74200.0, 1.0], [591400.0, 1.0], [595500.0, 1.0], [697900.0, 1.0], [479000.0, 1.0], [504600.0, 1.0], [141200.0, 1.0], [581200.0, 1.0], [286500.0, 1.0], [312100.0, 1.0], [632400.0, 1.0], [534100.0, 1.0], [230800.0, 2.0], [589400.0, 1.0], [640600.0, 1.0], [384800.0, 1.0], [542300.0, 1.0], [695900.0, 1.0], [487200.0, 1.0], [512800.0, 1.0], [269100.0, 1.0], [564800.0, 1.0], [158100.0, 1.0], [183700.0, 1.0], [397100.0, 1.0], [422700.0, 1.0], [222100.0, 1.0], [260500.0, 2.0], [773700.0, 1.0], [82900.0, 1.0], [675400.0, 1.0], [730700.0, 1.0], [521000.0, 1.0], [665200.0, 2.0], [213400.0, 1.0], [669300.0, 5.0], [298800.0, 1.0], [324400.0, 1.0], [26100.0, 1.0], [452400.0, 1.0], [597600.0, 1.0], [336700.0, 1.0], [700000.0, 1.0], [45800.0, 1.0], [387900.0, 1.0], [550500.0, 1.0], [601700.0, 1.0], [490300.0, 1.0], [515900.0, 1.0], [307000.0, 1.0], [435000.0, 1.0], [511800.0, 2.0], [550800.0, 1.0], [172000.0, 1.0], [373700.0, 1.0], [450500.0, 1.0], [819100.0, 1.0], [559000.0, 2.0], [292800.0, 1.0], [610200.0, 2.0], [665500.0, 1.0], [472000.0, 2.0], [497600.0, 3.0], [534400.0, 1.0], [636800.0, 1.0], [163300.0, 1.0], [381900.0, 1.0], [407500.0, 1.0], [538500.0, 2.0], [589700.0, 1.0], [692100.0, 1.0], [484300.0, 1.0], [252900.0, 1.0], [593800.0, 1.0], [429000.0, 1.0], [649100.0, 1.0], [454600.0, 1.0], [480200.0, 1.0], [700300.0, 1.0], [287700.0, 1.0], [167400.0, 2.0], [390100.0, 1.0], [193000.0, 1.0], [415700.0, 1.0], [518100.0, 1.0], [796600.0, 1.0], [462800.0, 1.0], [488400.0, 2.0], [372700.0, 3.0], [571300.0, 1.0], [449500.0, 1.0], [475100.0, 1.0], [266200.0, 2.0], [291800.0, 1.0], [729000.0, 1.0], [528300.0, 2.0], [419800.0, 2.0], [579500.0, 3.0], [496600.0, 1.0], [522200.0, 3.0], [565200.0, 1.0], [616400.0, 1.0], [188400.0, 1.0], [620500.0, 1.0], [274400.0, 1.0], [573400.0, 1.0], [727000.0, 1.0], [453600.0, 1.0], [679900.0, 1.0], [731100.0, 2.0], [504800.0, 1.0], [205300.0, 1.0], [557000.0, 2.0], [608200.0, 1.0], [659400.0, 1.0], [710600.0, 1.0], [761800.0, 2.0], [561100.0, 1.0], [461800.0, 1.0], [145400.0, 2.0], [649200.0, 1.0], [751600.0, 1.0], [422900.0, 3.0], [602100.0, 1.0], [474100.0, 1.0], [15100.0, 1.0], [704500.0, 2.0], [247800.0, 1.0], [260600.0, 1.0], [17400.0, 1.0], [555000.0, 1.0], [606200.0, 1.0], [25400.0, 1.0], [559100.0, 2.0], [610300.0, 2.0], [28600.0, 1.0], [712700.0, 1.0], [521200.0, 1.0], [530400.0, 1.0], [684000.0, 1.0], [175100.0, 1.0], [735200.0, 1.0], [786400.0, 2.0], [534500.0, 1.0], [200700.0, 1.0], [585700.0, 2.0], [641000.0, 1.0], [82400.0, 1.0], [542700.0, 1.0], [696300.0, 1.0], [503800.0, 1.0], [573200.0, 1.0], [164800.0, 1.0], [190400.0, 1.0], [203200.0, 1.0], [526100.0, 1.0], [679700.0, 2.0], [241600.0, 1.0], [487300.0, 1.0], [512900.0, 1.0], [530200.0, 2.0], [581400.0, 1.0], [534300.0, 1.0], [585500.0, 1.0], [508800.0, 3.0], [556800.0, 1.0], [265100.0, 1.0], [316300.0, 1.0], [194500.0, 1.0], [761600.0, 1.0], [418700.0, 1.0], [560900.0, 1.0], [220100.0, 1.0], [469900.0, 1.0], [667400.0, 1.0], [569100.0, 1.0], [620300.0, 3.0], [491400.0, 1.0], [130300.0, 1.0], [517000.0, 2.0], [324500.0, 1.0], [657200.0, 1.0], [401300.0, 1.0], [558900.0, 5.0], [452500.0, 1.0], [614200.0, 2.0], [665400.0, 1.0], [716600.0, 1.0], [819000.0, 1.0], [397200.0, 1.0], [422800.0, 2.0], [448400.0, 1.0], [474000.0, 1.0], [640800.0, 2.0], [202700.0, 1.0], [59900.0, 1.0], [747300.0, 1.0], [511900.0, 1.0], [550700.0, 2.0], [456600.0, 1.0], [119800.0, 1.0], [507800.0, 2.0], [587600.0, 1.0], [289700.0, 1.0], [315300.0, 1.0], [194000.0, 1.0], [540500.0, 1.0], [417700.0, 1.0], [494500.0, 1.0], [520100.0, 1.0], [698200.0, 1.0], [548700.0, 1.0], [272300.0, 1.0], [571200.0, 3.0], [349100.0, 1.0], [172500.0, 1.0], [400300.0, 1.0], [575300.0, 1.0], [451500.0, 1.0], [528200.0, 2.0], [579400.0, 1.0], [96500.0, 1.0], [784200.0, 1.0], [532300.0, 1.0], [115700.0, 1.0], [524200.0, 1.0], [163800.0, 2.0], [331700.0, 1.0], [408500.0, 1.0], [202200.0, 2.0], [573300.0, 2.0], [624500.0, 2.0], [485300.0, 1.0], [510900.0, 1.0], [526200.0, 1.0], [276400.0, 1.0], [577400.0, 1.0], [23100.0, 1.0], [27900.0, 1.0], [632700.0, 2.0], [506800.0, 2.0], [32700.0, 1.0], [786300.0, 1.0], [604000.0, 2.0], [655200.0, 1.0], [339900.0, 1.0], [167900.0, 1.0], [180700.0, 2.0], [556900.0, 1.0], [231900.0, 2.0], [493500.0, 1.0], [257500.0, 1.0], [561000.0, 1.0], [714600.0, 1.0], [565100.0, 1.0], [412600.0, 1.0], [438200.0, 1.0], [667500.0, 2.0], [463800.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 943200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1986.0, "series": [{"data": [[0.0, 3.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 7.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1986.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 18.107142857142858, "minX": 1.61673342E12, "maxY": 199.0, "series": [{"data": [[1.61673528E12, 198.0], [1.61673828E12, 137.55882352941177], [1.61673468E12, 198.0], [1.61673666E12, 192.23076923076923], [1.6167363E12, 194.0], [1.61673426E12, 198.0], [1.61673708E12, 188.0], [1.61673366E12, 199.0], [1.61673588E12, 196.0], [1.61673768E12, 183.0], [1.6167375E12, 184.0], [1.61673384E12, 199.0], [1.61673546E12, 197.0], [1.6167381E12, 159.55102040816328], [1.61673486E12, 198.0], [1.61673648E12, 193.7196261682243], [1.61673504E12, 198.0], [1.61673444E12, 198.0], [1.6167369E12, 191.0], [1.61673402E12, 199.0], [1.61673624E12, 194.0], [1.61673702E12, 189.0], [1.61673342E12, 18.107142857142858], [1.61673564E12, 196.0], [1.61673762E12, 183.0], [1.6167336E12, 190.23529411764707], [1.61673804E12, 165.0], [1.61673522E12, 198.0], [1.61673642E12, 194.0], [1.61673462E12, 198.0], [1.61673846E12, 23.0], [1.6167348E12, 198.0], [1.6167342E12, 198.0], [1.61673582E12, 196.0], [1.61673744E12, 184.76923076923075], [1.61673378E12, 199.0], [1.616736E12, 196.0], [1.6167354E12, 197.83333333333331], [1.61673786E12, 178.0], [1.61673798E12, 167.3943661971831], [1.61673498E12, 198.0], [1.61673438E12, 198.0], [1.61673696E12, 190.37142857142857], [1.61673456E12, 198.0], [1.61673678E12, 191.0], [1.61673618E12, 195.1851851851852], [1.61673738E12, 186.0], [1.61673396E12, 199.0], [1.61673558E12, 196.02941176470588], [1.61673354E12, 132.62962962962965], [1.61673576E12, 196.0], [1.6167378E12, 180.45945945945942], [1.61673516E12, 198.0], [1.6167384E12, 76.93650793650794], [1.61673822E12, 147.42647058823525], [1.61673474E12, 198.0], [1.61673414E12, 198.18750000000003], [1.6167372E12, 187.12500000000006], [1.61673432E12, 198.0], [1.61673594E12, 196.0], [1.61673732E12, 186.0], [1.61673372E12, 199.0], [1.61673792E12, 174.2972972972973], [1.61673534E12, 198.0], [1.61673552E12, 197.0], [1.61673774E12, 181.9545454545455], [1.61673834E12, 119.04444444444444], [1.61673492E12, 198.0], [1.61673672E12, 191.23333333333332], [1.61673654E12, 193.0], [1.6167345E12, 198.0], [1.6167339E12, 199.0], [1.61673612E12, 196.0], [1.61673714E12, 188.0], [1.61673408E12, 199.0], [1.61673756E12, 183.89999999999998], [1.61673348E12, 67.10416666666666], [1.61673816E12, 154.69230769230768]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61673846E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 19827.333333333336, "minX": 1.0, "maxY": 712065.6595744679, "series": [{"data": [[2.0, 23353.75], [3.0, 26185.0], [4.0, 61091.0], [5.0, 23529.5], [6.0, 75445.0], [7.0, 61395.0], [8.0, 19827.333333333336], [9.0, 119973.0], [10.0, 90365.0], [11.0, 20369.666666666668], [12.0, 32606.0], [13.0, 102613.0], [14.0, 25608.25], [15.0, 54734.5], [16.0, 54478.0], [17.0, 116704.0], [18.0, 22488.8], [19.0, 76292.0], [20.0, 145402.0], [21.0, 172503.0], [22.0, 94433.0], [23.0, 170477.0], [24.0, 64455.333333333336], [25.0, 170055.0], [26.0, 223398.0], [27.0, 201980.0], [28.0, 70520.33333333334], [29.0, 221397.0], [30.0, 102462.5], [31.0, 83764.33333333333], [33.0, 70215.33333333334], [32.0, 215670.0], [34.0, 49372.666666666664], [35.0, 167496.0], [36.0, 64117.25], [37.0, 106579.0], [39.0, 175389.0], [38.0, 167493.0], [40.0, 71900.33333333334], [41.0, 174918.0], [42.0, 59627.25], [43.0, 193656.0], [45.0, 240833.0], [44.0, 193260.0], [46.0, 59938.0], [47.0, 112174.5], [49.0, 163899.0], [48.0, 165899.0], [51.0, 116696.5], [50.0, 172077.0], [52.0, 77527.66666666666], [53.0, 85527.0], [55.0, 164406.0], [54.0, 183799.0], [57.0, 183981.0], [56.0, 165687.0], [58.0, 59854.0], [59.0, 165257.0], [61.0, 202799.0], [60.0, 163895.0], [63.0, 61882.4], [62.0, 182001.0], [64.0, 66393.4], [65.0, 96604.5], [67.0, 179361.0], [66.0, 161264.0], [71.0, 45806.57142857143], [70.0, 194045.0], [69.0, 197879.0], [68.0, 188734.0], [72.0, 95127.5], [74.0, 115632.0], [75.0, 180701.0], [73.0, 192381.0], [77.0, 122296.0], [78.0, 56932.333333333336], [79.0, 102391.5], [76.0, 171381.0], [80.0, 116100.0], [83.0, 193069.0], [82.0, 188498.0], [81.0, 191738.0], [87.0, 95357.33333333334], [86.0, 153396.0], [85.0, 170248.0], [84.0, 203412.0], [91.0, 210666.0], [90.0, 167564.0], [89.0, 190899.0], [88.0, 217611.0], [92.0, 96219.66666666666], [95.0, 93835.33333333334], [94.0, 198248.0], [93.0, 191606.0], [98.0, 129050.5], [99.0, 221217.0], [97.0, 196846.0], [96.0, 180383.0], [103.0, 111828.66666666666], [102.0, 167943.0], [101.0, 199211.0], [100.0, 197293.0], [107.0, 193873.0], [106.0, 260886.5], [105.0, 288654.5], [104.0, 285401.0], [110.0, 181115.66666666666], [111.0, 94005.8], [109.0, 246070.0], [108.0, 241225.88888888888], [115.0, 211738.0], [114.0, 229076.0], [113.0, 269753.0], [112.0, 246168.0], [119.0, 245431.0], [118.0, 251885.5], [117.0, 245054.0], [116.0, 252907.0], [123.0, 157917.5], [122.0, 231991.0], [121.0, 248793.66666666666], [120.0, 269957.0], [124.0, 113542.75], [127.0, 202203.0], [126.0, 243611.0], [125.0, 231960.0], [135.0, 283137.0], [134.0, 230840.5], [133.0, 191204.0], [132.0, 214649.0], [131.0, 223895.5], [130.0, 202207.0], [129.0, 230894.0], [128.0, 231732.0], [140.0, 128124.33333333333], [141.0, 226010.75], [142.0, 212467.0], [143.0, 273872.6], [139.0, 277141.25000000006], [138.0, 273037.0], [137.0, 296260.63636363635], [136.0, 279846.7142857143], [151.0, 291822.0], [150.0, 280572.71428571426], [149.0, 294136.4285714285], [148.0, 253584.0], [147.0, 265947.10000000003], [146.0, 286407.0], [145.0, 263039.5], [144.0, 269575.0], [156.0, 286860.8571428571], [157.0, 187302.14285714284], [159.0, 355878.3333333333], [158.0, 346460.75], [155.0, 324969.6153846154], [154.0, 342800.99999999994], [153.0, 282813.0], [152.0, 279828.2727272727], [167.0, 503552.75], [166.0, 431191.00000000006], [165.0, 434667.6666666666], [164.0, 342494.0], [163.0, 306897.0], [162.0, 305092.3333333334], [161.0, 329520.2307692308], [160.0, 323210.0], [175.0, 439143.5], [174.0, 440958.0], [173.0, 432416.5], [172.0, 390685.5], [171.0, 446147.69230769237], [170.0, 510877.0], [169.0, 450234.25], [168.0, 463485.037037037], [178.0, 507472.49999999994], [179.0, 215862.0], [183.0, 553826.9333333333], [182.0, 561958.6153846154], [181.0, 604101.88], [180.0, 611496.7999999999], [177.0, 440768.4285714286], [176.0, 422622.0], [191.0, 481941.0624999999], [190.0, 480678.75000000006], [189.0, 510381.30232558143], [188.0, 523795.0], [187.0, 487931.5], [186.0, 513199.0714285715], [185.0, 474497.6666666666], [184.0, 526210.4666666666], [198.0, 623840.0629722923], [199.0, 373667.63043478265], [197.0, 712065.6595744679], [196.0, 572605.8186528495], [195.0, 651778.125], [194.0, 605884.1071428572], [193.0, 583664.964912281], [192.0, 527206.7037037037], [1.0, 36362.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[170.7800000000001, 464815.4474999998]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 199.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1.9833333333333334, "minX": 1.61673342E12, "maxY": 745378.05, "series": [{"data": [[1.61673528E12, 146289.15], [1.61673828E12, 236849.1], [1.61673468E12, 592122.75], [1.61673666E12, 181119.9], [1.6167363E12, 41796.9], [1.61673426E12, 90559.95], [1.61673708E12, 257747.55], [1.61673366E12, 153255.3], [1.61673588E12, 202018.35], [1.61673768E12, 6966.15], [1.6167375E12, 222916.8], [1.61673384E12, 27864.6], [1.61673546E12, 181119.9], [1.6167381E12, 341341.35], [1.61673486E12, 104492.25], [1.61673648E12, 745378.05], [1.61673504E12, 20898.45], [1.61673444E12, 76627.65], [1.6167369E12, 125390.7], [1.61673402E12, 236849.1], [1.61673624E12, 146289.15], [1.61673702E12, 278646.0], [1.61673342E12, 390104.4], [1.61673564E12, 20898.45], [1.61673762E12, 34830.75], [1.6167336E12, 118424.55], [1.61673804E12, 27864.6], [1.61673522E12, 83593.8], [1.61673642E12, 6966.15], [1.61673462E12, 111458.4], [1.61673846E12, 313476.75], [1.6167348E12, 97526.1], [1.6167342E12, 69661.5], [1.61673582E12, 188086.05], [1.61673744E12, 181119.9], [1.61673378E12, 153255.3], [1.616736E12, 41796.9], [1.6167354E12, 501562.8], [1.61673786E12, 83593.8], [1.61673798E12, 494596.65], [1.61673498E12, 34830.75], [1.61673438E12, 62695.35], [1.61673696E12, 243815.25], [1.61673456E12, 111458.4], [1.61673678E12, 48763.05], [1.61673618E12, 188086.05], [1.61673738E12, 27864.6], [1.61673396E12, 271679.85], [1.61673558E12, 236849.1], [1.61673354E12, 188086.05], [1.61673576E12, 20898.45], [1.6167378E12, 257747.55], [1.61673516E12, 6966.15], [1.6167384E12, 438867.45], [1.61673822E12, 473698.2], [1.61673474E12, 83593.8], [1.61673414E12, 222916.8], [1.6167372E12, 222916.8], [1.61673432E12, 83593.8], [1.61673594E12, 466732.05], [1.61673732E12, 27864.6], [1.61673372E12, 55729.2], [1.61673792E12, 257747.55], [1.61673534E12, 132356.85], [1.61673552E12, 55729.2], [1.61673774E12, 153255.3], [1.61673834E12, 313476.75], [1.61673492E12, 181119.9], [1.61673672E12, 208984.5], [1.61673654E12, 146289.15], [1.6167345E12, 34830.75], [1.6167339E12, 132356.85], [1.61673612E12, 90559.95], [1.61673714E12, 160221.45], [1.61673408E12, 181119.9], [1.61673756E12, 348307.5], [1.61673348E12, 306647.73333333334], [1.61673816E12, 90559.95]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61673528E12, 41.65], [1.61673828E12, 67.43333333333334], [1.61673468E12, 168.58333333333334], [1.61673666E12, 51.56666666666667], [1.6167363E12, 11.9], [1.61673426E12, 25.783333333333335], [1.61673708E12, 73.38333333333334], [1.61673366E12, 43.63333333333333], [1.61673588E12, 57.516666666666666], [1.61673768E12, 1.9833333333333334], [1.6167375E12, 63.46666666666667], [1.61673384E12, 7.933333333333334], [1.61673546E12, 51.56666666666667], [1.6167381E12, 97.18333333333334], [1.61673486E12, 29.75], [1.61673648E12, 212.21666666666667], [1.61673504E12, 5.95], [1.61673444E12, 21.816666666666666], [1.6167369E12, 35.7], [1.61673402E12, 67.43333333333334], [1.61673624E12, 41.65], [1.61673702E12, 79.33333333333333], [1.61673342E12, 111.06666666666666], [1.61673564E12, 5.95], [1.61673762E12, 9.916666666666666], [1.6167336E12, 33.71666666666667], [1.61673804E12, 7.933333333333334], [1.61673522E12, 23.8], [1.61673642E12, 1.9833333333333334], [1.61673462E12, 31.733333333333334], [1.61673846E12, 89.25], [1.6167348E12, 27.766666666666666], [1.6167342E12, 19.833333333333332], [1.61673582E12, 53.55], [1.61673744E12, 51.56666666666667], [1.61673378E12, 43.63333333333333], [1.616736E12, 11.9], [1.6167354E12, 142.8], [1.61673786E12, 23.8], [1.61673798E12, 140.81666666666666], [1.61673498E12, 9.916666666666666], [1.61673438E12, 17.85], [1.61673696E12, 69.41666666666667], [1.61673456E12, 31.733333333333334], [1.61673678E12, 13.883333333333333], [1.61673618E12, 53.55], [1.61673738E12, 7.933333333333334], [1.61673396E12, 77.35], [1.61673558E12, 67.43333333333334], [1.61673354E12, 53.55], [1.61673576E12, 5.95], [1.6167378E12, 73.38333333333334], [1.61673516E12, 1.9833333333333334], [1.6167384E12, 124.95], [1.61673822E12, 134.86666666666667], [1.61673474E12, 23.8], [1.61673414E12, 63.46666666666667], [1.6167372E12, 63.46666666666667], [1.61673432E12, 23.8], [1.61673594E12, 132.88333333333333], [1.61673732E12, 7.933333333333334], [1.61673372E12, 15.866666666666667], [1.61673792E12, 73.38333333333334], [1.61673534E12, 37.68333333333333], [1.61673552E12, 15.866666666666667], [1.61673774E12, 43.63333333333333], [1.61673834E12, 89.25], [1.61673492E12, 51.56666666666667], [1.61673672E12, 59.5], [1.61673654E12, 41.65], [1.6167345E12, 9.916666666666666], [1.6167339E12, 37.68333333333333], [1.61673612E12, 25.783333333333335], [1.61673714E12, 45.61666666666667], [1.61673408E12, 51.56666666666667], [1.61673756E12, 99.16666666666667], [1.61673348E12, 87.26666666666667], [1.61673816E12, 25.783333333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61673846E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8216.964285714286, "minX": 1.61673342E12, "maxY": 744110.3333333334, "series": [{"data": [[1.61673528E12, 653160.1904761904], [1.61673828E12, 285140.8235294117], [1.61673468E12, 653306.4352941171], [1.61673666E12, 507257.03846153844], [1.6167363E12, 701625.0], [1.61673426E12, 543595.4615384616], [1.61673708E12, 561767.2972972972], [1.61673366E12, 182995.72727272726], [1.61673588E12, 532258.7586206897], [1.61673768E12, 634537.0], [1.6167375E12, 513806.4375000001], [1.61673384E12, 336229.0], [1.61673546E12, 700730.7307692308], [1.6167381E12, 331558.5102040816], [1.61673486E12, 615351.6000000001], [1.61673648E12, 583438.7289719626], [1.61673504E12, 584960.0], [1.61673444E12, 568893.4545454546], [1.6167369E12, 460378.0555555555], [1.61673402E12, 453897.99999999994], [1.61673624E12, 675248.3333333333], [1.61673702E12, 511198.05], [1.61673342E12, 8216.964285714286], [1.61673564E12, 706298.6666666666], [1.61673762E12, 562554.6], [1.6167336E12, 130093.4705882353], [1.61673804E12, 438354.25], [1.61673522E12, 581657.0833333333], [1.61673642E12, 471886.0], [1.61673462E12, 662969.7499999999], [1.61673846E12, 152748.11111111112], [1.6167348E12, 629219.2142857141], [1.6167342E12, 556730.5], [1.61673582E12, 489920.51851851854], [1.61673744E12, 478802.8461538461], [1.61673378E12, 277404.2727272727], [1.616736E12, 596573.8333333334], [1.6167354E12, 744110.3333333334], [1.61673786E12, 603364.5], [1.61673798E12, 456859.95774647867], [1.61673498E12, 556785.6], [1.61673438E12, 621962.6666666666], [1.61673696E12, 477601.8571428572], [1.61673456E12, 609790.3125], [1.61673678E12, 574030.0], [1.61673618E12, 629809.037037037], [1.61673738E12, 574106.25], [1.61673396E12, 422545.46153846156], [1.61673558E12, 658431.1764705881], [1.61673354E12, 82155.96296296295], [1.61673576E12, 667417.3333333334], [1.6167378E12, 613160.3513513515], [1.61673516E12, 693286.0], [1.6167384E12, 192181.63492063494], [1.61673822E12, 277239.01470588223], [1.61673474E12, 615205.5000000001], [1.61673414E12, 514960.87499999994], [1.6167372E12, 492949.31250000006], [1.61673432E12, 553109.25], [1.61673594E12, 550698.4477611941], [1.61673732E12, 566018.75], [1.61673372E12, 224190.375], [1.61673792E12, 429142.02702702704], [1.61673534E12, 685032.6842105263], [1.61673552E12, 695971.25], [1.61673774E12, 559540.7727272726], [1.61673834E12, 236829.91111111108], [1.61673492E12, 558584.6153846154], [1.61673672E12, 500670.43333333335], [1.61673654E12, 603386.7142857143], [1.6167345E12, 610113.2], [1.6167339E12, 376199.63157894736], [1.61673612E12, 610231.8461538462], [1.61673714E12, 484279.78260869574], [1.61673408E12, 489045.42307692306], [1.61673756E12, 546266.9600000001], [1.61673348E12, 32808.479166666664], [1.61673816E12, 342250.00000000006]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61673846E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7738.374999999998, "minX": 1.61673342E12, "maxY": 685026.052631579, "series": [{"data": [[1.61673528E12, 653158.4285714286], [1.61673828E12, 276789.97058823536], [1.61673468E12, 624656.4470588234], [1.61673666E12, 507255.1923076923], [1.6167363E12, 586913.3333333333], [1.61673426E12, 512093.7692307692], [1.61673708E12, 483668.2432432433], [1.61673366E12, 162084.04545454547], [1.61673588E12, 532221.7586206896], [1.61673768E12, 477293.0], [1.6167375E12, 513796.75], [1.61673384E12, 336221.75], [1.61673546E12, 665278.2692307692], [1.6167381E12, 331542.2653061225], [1.61673486E12, 580828.4666666666], [1.61673648E12, 521915.88785046723], [1.61673504E12, 481296.3333333333], [1.61673444E12, 548625.8181818181], [1.6167369E12, 443668.2777777778], [1.61673402E12, 434794.5], [1.61673624E12, 587209.7619047619], [1.61673702E12, 470716.52499999997], [1.61673342E12, 7738.374999999998], [1.61673564E12, 613704.3333333334], [1.61673762E12, 492972.4], [1.6167336E12, 122830.58823529411], [1.61673804E12, 398668.0], [1.61673522E12, 581650.7500000001], [1.61673642E12, 471883.0], [1.61673462E12, 596074.5625], [1.61673846E12, 149772.51111111106], [1.6167348E12, 586547.2142857142], [1.6167342E12, 500442.1], [1.61673582E12, 489913.8148148149], [1.61673744E12, 478778.4230769232], [1.61673378E12, 266035.86363636365], [1.616736E12, 532984.8333333333], [1.6167354E12, 644105.3750000001], [1.61673786E12, 569156.25], [1.61673798E12, 447357.42253521114], [1.61673498E12, 512594.0], [1.61673438E12, 549251.888888889], [1.61673696E12, 477578.1714285714], [1.61673456E12, 609781.1249999999], [1.61673678E12, 491720.71428571426], [1.61673618E12, 600940.5555555555], [1.61673738E12, 424214.5], [1.61673396E12, 408756.7435897437], [1.61673558E12, 629083.6176470589], [1.61673354E12, 76988.88888888888], [1.61673576E12, 563553.3333333334], [1.6167378E12, 610673.3243243244], [1.61673516E12, 481656.0], [1.6167384E12, 189737.8571428572], [1.61673822E12, 276167.4852941177], [1.61673474E12, 601148.0], [1.61673414E12, 484767.09374999994], [1.6167372E12, 475397.65625], [1.61673432E12, 526406.8333333334], [1.61673594E12, 510391.8358208955], [1.61673732E12, 492649.0], [1.61673372E12, 204921.25], [1.61673792E12, 429121.29729729734], [1.61673534E12, 685026.052631579], [1.61673552E12, 619103.0], [1.61673774E12, 559523.6818181818], [1.61673834E12, 233875.0888888889], [1.61673492E12, 541110.1538461538], [1.61673672E12, 476949.00000000006], [1.61673654E12, 540007.0476190477], [1.6167345E12, 544409.8], [1.6167339E12, 357342.8947368421], [1.61673612E12, 610182.7692307694], [1.61673714E12, 484258.956521739], [1.61673408E12, 458331.80769230763], [1.61673756E12, 485365.57999999996], [1.61673348E12, 30074.333333333336], [1.61673816E12, 317120.3846153846]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61673846E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61673342E12, "maxY": 5.538461538461539, "series": [{"data": [[1.61673528E12, 1.3809523809523812], [1.61673828E12, 0.6176470588235295], [1.61673468E12, 2.105882352941176], [1.61673666E12, 1.1923076923076925], [1.6167363E12, 1.1666666666666665], [1.61673426E12, 3.4615384615384612], [1.61673708E12, 1.027027027027027], [1.61673366E12, 1.9999999999999998], [1.61673588E12, 1.5172413793103452], [1.61673768E12, 0.0], [1.6167375E12, 1.7812499999999996], [1.61673384E12, 1.9999999999999998], [1.61673546E12, 1.8076923076923075], [1.6167381E12, 1.1428571428571428], [1.61673486E12, 1.7333333333333334], [1.61673648E12, 1.0560747663551397], [1.61673504E12, 3.333333333333333], [1.61673444E12, 1.3636363636363638], [1.6167369E12, 1.1666666666666667], [1.61673402E12, 2.1176470588235294], [1.61673624E12, 1.8571428571428574], [1.61673702E12, 1.5499999999999998], [1.61673342E12, 2.8035714285714293], [1.61673564E12, 1.0], [1.61673762E12, 1.0], [1.6167336E12, 3.529411764705882], [1.61673804E12, 0.75], [1.61673522E12, 1.5], [1.61673642E12, 1.0], [1.61673462E12, 2.3125], [1.61673846E12, 0.7555555555555556], [1.6167348E12, 1.4285714285714286], [1.6167342E12, 1.6], [1.61673582E12, 1.8888888888888888], [1.61673744E12, 0.9615384615384615], [1.61673378E12, 2.2272727272727275], [1.616736E12, 1.3333333333333333], [1.6167354E12, 1.3888888888888893], [1.61673786E12, 1.1666666666666667], [1.61673798E12, 0.9154929577464788], [1.61673498E12, 1.2], [1.61673438E12, 2.333333333333334], [1.61673696E12, 2.1714285714285717], [1.61673456E12, 2.0625], [1.61673678E12, 1.1428571428571428], [1.61673618E12, 1.8888888888888884], [1.61673738E12, 0.25], [1.61673396E12, 2.743589743589744], [1.61673558E12, 1.2058823529411768], [1.61673354E12, 0.6666666666666666], [1.61673576E12, 3.0], [1.6167378E12, 1.7297297297297294], [1.61673516E12, 2.0], [1.6167384E12, 0.8888888888888887], [1.61673822E12, 1.0588235294117647], [1.61673474E12, 1.0], [1.61673414E12, 2.03125], [1.6167372E12, 0.875], [1.61673432E12, 1.25], [1.61673594E12, 2.19402985074627], [1.61673732E12, 1.0], [1.61673372E12, 3.375], [1.61673792E12, 1.1351351351351349], [1.61673534E12, 1.4210526315789473], [1.61673552E12, 1.125], [1.61673774E12, 1.0454545454545456], [1.61673834E12, 0.6666666666666667], [1.61673492E12, 5.538461538461539], [1.61673672E12, 0.7999999999999998], [1.61673654E12, 1.476190476190476], [1.6167345E12, 2.2], [1.6167339E12, 1.9999999999999998], [1.61673612E12, 1.6153846153846152], [1.61673714E12, 1.0869565217391306], [1.61673408E12, 1.9999999999999998], [1.61673756E12, 1.6399999999999997], [1.61673348E12, 1.104166666666667], [1.61673816E12, 0.6153846153846155]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61673846E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 75.0, "minX": 1.61673342E12, "maxY": 943217.0, "series": [{"data": [[1.61673528E12, 785872.0], [1.61673828E12, 331719.0], [1.61673468E12, 819058.0], [1.61673666E12, 572388.0], [1.6167363E12, 871431.0], [1.61673426E12, 609379.0], [1.61673708E12, 603980.0], [1.61673366E12, 205318.0], [1.61673588E12, 680288.0], [1.61673768E12, 634537.0], [1.6167375E12, 578259.0], [1.61673384E12, 338520.0], [1.61673546E12, 943217.0], [1.6167381E12, 387992.0], [1.61673486E12, 682444.0], [1.61673648E12, 668826.0], [1.61673504E12, 585577.0], [1.61673444E12, 648910.0], [1.6167369E12, 632204.0], [1.61673402E12, 502418.0], [1.61673624E12, 784717.0], [1.61673702E12, 564966.0], [1.61673342E12, 22129.0], [1.61673564E12, 706314.0], [1.61673762E12, 562601.0], [1.6167336E12, 157113.0], [1.61673804E12, 469396.0], [1.61673522E12, 668442.0], [1.61673642E12, 471886.0], [1.61673462E12, 716245.0], [1.61673846E12, 240833.0], [1.6167348E12, 682409.0], [1.6167342E12, 598767.0], [1.61673582E12, 630219.0], [1.61673744E12, 524977.0], [1.61673378E12, 315301.0], [1.616736E12, 761936.0], [1.6167354E12, 888185.0], [1.61673786E12, 760040.0], [1.61673798E12, 551394.0], [1.61673498E12, 613125.0], [1.61673438E12, 686137.0], [1.61673696E12, 518469.0], [1.61673456E12, 717197.0], [1.61673678E12, 627463.0], [1.61673618E12, 710077.0], [1.61673738E12, 593002.0], [1.61673396E12, 467641.0], [1.61673558E12, 703568.0], [1.61673354E12, 107659.0], [1.61673576E12, 703479.0], [1.6167378E12, 702295.0], [1.61673516E12, 693286.0], [1.6167384E12, 300855.0], [1.61673822E12, 349135.0], [1.61673474E12, 711621.0], [1.61673414E12, 582629.0], [1.6167372E12, 579237.0], [1.61673432E12, 630088.0], [1.61673594E12, 712719.0], [1.61673732E12, 661616.0], [1.61673372E12, 241638.0], [1.61673792E12, 503869.0], [1.61673534E12, 833674.0], [1.61673552E12, 735450.0], [1.61673774E12, 647435.0], [1.61673834E12, 283137.0], [1.61673492E12, 692100.0], [1.61673672E12, 610369.0], [1.61673654E12, 694726.0], [1.6167345E12, 617415.0], [1.6167339E12, 395523.0], [1.61673612E12, 649792.0], [1.61673714E12, 534589.0], [1.61673408E12, 530833.0], [1.61673756E12, 646874.0], [1.61673348E12, 57934.0], [1.61673816E12, 430621.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61673528E12, 769712.4], [1.61673828E12, 316753.0], [1.61673468E12, 731141.6], [1.61673666E12, 571355.7], [1.6167363E12, 871431.0], [1.61673426E12, 609354.2], [1.61673708E12, 586821.6], [1.61673366E12, 202059.1], [1.61673588E12, 651015.0], [1.61673768E12, 634537.0], [1.6167375E12, 568447.9], [1.61673384E12, 338520.0], [1.61673546E12, 805362.7000000001], [1.6167381E12, 372745.0], [1.61673486E12, 682438.6], [1.61673648E12, 667465.8], [1.61673504E12, 585577.0], [1.61673444E12, 648314.6], [1.6167369E12, 632143.7], [1.61673402E12, 487452.0], [1.61673624E12, 784560.4], [1.61673702E12, 530811.3], [1.61673342E12, 19574.4], [1.61673564E12, 706314.0], [1.61673762E12, 562601.0], [1.6167336E12, 149960.19999999998], [1.61673804E12, 469396.0], [1.61673522E12, 666621.6], [1.61673642E12, 471886.0], [1.61673462E12, 715588.4], [1.61673846E12, 217940.8], [1.6167348E12, 675615.0], [1.6167342E12, 597466.6], [1.61673582E12, 600969.4], [1.61673744E12, 524405.5], [1.61673378E12, 312566.0], [1.616736E12, 761936.0], [1.6167354E12, 819807.8], [1.61673786E12, 759998.3], [1.61673798E12, 531960.6], [1.61673498E12, 613125.0], [1.61673438E12, 686137.0], [1.61673696E12, 510885.2], [1.61673456E12, 716841.4], [1.61673678E12, 627463.0], [1.61673618E12, 709620.0], [1.61673738E12, 593002.0], [1.61673396E12, 456876.0], [1.61673558E12, 699914.5], [1.61673354E12, 103351.8], [1.61673576E12, 703479.0], [1.6167378E12, 695072.6], [1.61673516E12, 693286.0], [1.6167384E12, 219774.6], [1.61673822E12, 304883.0], [1.61673474E12, 700968.9], [1.61673414E12, 565050.7], [1.6167372E12, 538435.9], [1.61673432E12, 617473.3], [1.61673594E12, 659064.4], [1.61673732E12, 661616.0], [1.61673372E12, 241638.0], [1.61673792E12, 486032.2], [1.61673534E12, 805417.0], [1.61673552E12, 735450.0], [1.61673774E12, 647135.7], [1.61673834E12, 269750.0], [1.61673492E12, 676573.7], [1.61673672E12, 597016.6], [1.61673654E12, 694119.0], [1.6167345E12, 617415.0], [1.6167339E12, 390488.0], [1.61673612E12, 649784.0], [1.61673714E12, 533279.2], [1.61673408E12, 525912.7], [1.61673756E12, 620126.0], [1.61673348E12, 52171.5], [1.61673816E12, 418747.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61673528E12, 785872.0], [1.61673828E12, 331719.0], [1.61673468E12, 819058.0], [1.61673666E12, 572388.0], [1.6167363E12, 871431.0], [1.61673426E12, 609379.0], [1.61673708E12, 603980.0], [1.61673366E12, 205318.0], [1.61673588E12, 680288.0], [1.61673768E12, 634537.0], [1.6167375E12, 578259.0], [1.61673384E12, 338520.0], [1.61673546E12, 943217.0], [1.6167381E12, 387992.0], [1.61673486E12, 682444.0], [1.61673648E12, 668820.16], [1.61673504E12, 585577.0], [1.61673444E12, 648910.0], [1.6167369E12, 632204.0], [1.61673402E12, 502418.0], [1.61673624E12, 784717.0], [1.61673702E12, 564966.0], [1.61673342E12, 22129.0], [1.61673564E12, 706314.0], [1.61673762E12, 562601.0], [1.6167336E12, 157113.0], [1.61673804E12, 469396.0], [1.61673522E12, 668442.0], [1.61673642E12, 471886.0], [1.61673462E12, 716245.0], [1.61673846E12, 240833.0], [1.6167348E12, 682409.0], [1.6167342E12, 598767.0], [1.61673582E12, 630219.0], [1.61673744E12, 524977.0], [1.61673378E12, 315301.0], [1.616736E12, 761936.0], [1.6167354E12, 888185.0], [1.61673786E12, 760040.0], [1.61673798E12, 551394.0], [1.61673498E12, 613125.0], [1.61673438E12, 686137.0], [1.61673696E12, 518469.0], [1.61673456E12, 717197.0], [1.61673678E12, 627463.0], [1.61673618E12, 710077.0], [1.61673738E12, 593002.0], [1.61673396E12, 467641.0], [1.61673558E12, 703568.0], [1.61673354E12, 107659.0], [1.61673576E12, 703479.0], [1.6167378E12, 702295.0], [1.61673516E12, 693286.0], [1.6167384E12, 300855.0], [1.61673822E12, 349135.0], [1.61673474E12, 711621.0], [1.61673414E12, 582629.0], [1.6167372E12, 579237.0], [1.61673432E12, 630088.0], [1.61673594E12, 712719.0], [1.61673732E12, 661616.0], [1.61673372E12, 241638.0], [1.61673792E12, 503869.0], [1.61673534E12, 833674.0], [1.61673552E12, 735450.0], [1.61673774E12, 647435.0], [1.61673834E12, 283137.0], [1.61673492E12, 692100.0], [1.61673672E12, 610369.0], [1.61673654E12, 694726.0], [1.6167345E12, 617415.0], [1.6167339E12, 395523.0], [1.61673612E12, 649792.0], [1.61673714E12, 534589.0], [1.61673408E12, 530833.0], [1.61673756E12, 646874.0], [1.61673348E12, 57934.0], [1.61673816E12, 430621.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61673528E12, 784714.0], [1.61673828E12, 329757.75], [1.61673468E12, 772706.9], [1.61673666E12, 572075.45], [1.6167363E12, 871431.0], [1.61673426E12, 609379.0], [1.61673708E12, 588937.4], [1.61673366E12, 205009.3], [1.61673588E12, 666195.0], [1.61673768E12, 634537.0], [1.6167375E12, 572563.0499999999], [1.61673384E12, 338520.0], [1.61673546E12, 908540.7499999999], [1.6167381E12, 379326.0], [1.61673486E12, 682444.0], [1.61673648E12, 668451.2], [1.61673504E12, 585577.0], [1.61673444E12, 648910.0], [1.6167369E12, 632204.0], [1.61673402E12, 499412.75], [1.61673624E12, 784708.4], [1.61673702E12, 538498.7], [1.61673342E12, 20964.6], [1.61673564E12, 706314.0], [1.61673762E12, 562601.0], [1.6167336E12, 157113.0], [1.61673804E12, 469396.0], [1.61673522E12, 668442.0], [1.61673642E12, 471886.0], [1.61673462E12, 716245.0], [1.61673846E12, 222797.69999999998], [1.6167348E12, 682409.0], [1.6167342E12, 598767.0], [1.61673582E12, 619006.2], [1.61673744E12, 524920.3], [1.61673378E12, 314914.6], [1.616736E12, 761936.0], [1.6167354E12, 832287.15], [1.61673786E12, 760040.0], [1.61673798E12, 542384.5999999999], [1.61673498E12, 613125.0], [1.61673438E12, 686137.0], [1.61673696E12, 514552.19999999995], [1.61673456E12, 717197.0], [1.61673678E12, 627463.0], [1.61673618E12, 709902.2], [1.61673738E12, 593002.0], [1.61673396E12, 463671.0], [1.61673558E12, 701809.25], [1.61673354E12, 106401.4], [1.61673576E12, 703479.0], [1.6167378E12, 697026.4], [1.61673516E12, 693286.0], [1.6167384E12, 276298.8], [1.61673822E12, 320001.55], [1.61673474E12, 711621.0], [1.61673414E12, 576200.5], [1.6167372E12, 579031.6], [1.61673432E12, 630088.0], [1.61673594E12, 677311.7999999998], [1.61673732E12, 661616.0], [1.61673372E12, 241638.0], [1.61673792E12, 488238.7], [1.61673534E12, 833674.0], [1.61673552E12, 735450.0], [1.61673774E12, 647430.65], [1.61673834E12, 274703.69999999995], [1.61673492E12, 687687.2], [1.61673672E12, 604213.95], [1.61673654E12, 694725.2], [1.6167345E12, 617415.0], [1.6167339E12, 395523.0], [1.61673612E12, 649792.0], [1.61673714E12, 534536.4], [1.61673408E12, 530181.3], [1.61673756E12, 645676.45], [1.61673348E12, 53583.0], [1.61673816E12, 430621.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61673528E12, 561547.0], [1.61673828E12, 239967.0], [1.61673468E12, 554259.0], [1.61673666E12, 436785.0], [1.6167363E12, 581931.0], [1.61673426E12, 480232.0], [1.61673708E12, 488448.0], [1.61673366E12, 160554.0], [1.61673588E12, 446895.0], [1.61673768E12, 634537.0], [1.6167375E12, 433712.0], [1.61673384E12, 332352.0], [1.61673546E12, 593094.0], [1.6167381E12, 260184.0], [1.61673486E12, 544465.0], [1.61673648E12, 496875.0], [1.61673504E12, 584327.0], [1.61673444E12, 512690.0], [1.6167369E12, 422820.0], [1.61673402E12, 405924.0], [1.61673624E12, 493288.0], [1.61673702E12, 472019.0], [1.61673342E12, 75.0], [1.61673564E12, 706283.0], [1.61673762E12, 562460.0], [1.6167336E12, 114788.0], [1.61673804E12, 345300.0], [1.61673522E12, 519926.0], [1.61673642E12, 471886.0], [1.61673462E12, 597680.0], [1.61673846E12, 75445.0], [1.6167348E12, 561703.0], [1.6167342E12, 506706.0], [1.61673582E12, 426607.0], [1.61673744E12, 417429.0], [1.61673378E12, 252257.0], [1.616736E12, 556449.0], [1.6167354E12, 646084.0], [1.61673786E12, 458376.0], [1.61673798E12, 381313.0], [1.61673498E12, 499855.0], [1.61673438E12, 506715.0], [1.61673696E12, 445587.0], [1.61673456E12, 555596.0], [1.61673678E12, 552673.0], [1.61673618E12, 515953.0], [1.61673738E12, 517433.0], [1.61673396E12, 376576.0], [1.61673558E12, 551379.0], [1.61673354E12, 59952.0], [1.61673576E12, 595295.0], [1.6167378E12, 525135.0], [1.61673516E12, 693286.0], [1.6167384E12, 153396.0], [1.61673822E12, 240361.0], [1.61673474E12, 572969.0], [1.61673414E12, 452927.0], [1.6167372E12, 421945.0], [1.61673432E12, 533575.0], [1.61673594E12, 482868.0], [1.61673732E12, 426566.0], [1.61673372E12, 204363.0], [1.61673792E12, 375124.0], [1.61673534E12, 569181.0], [1.61673552E12, 636886.0], [1.61673774E12, 515112.0], [1.61673834E12, 191204.0], [1.61673492E12, 456111.0], [1.61673672E12, 387618.0], [1.61673654E12, 532261.0], [1.6167345E12, 584157.0], [1.6167339E12, 356667.0], [1.61673612E12, 532630.0], [1.61673714E12, 428900.0], [1.61673408E12, 448435.0], [1.61673756E12, 477014.0], [1.61673348E12, 19485.0], [1.61673816E12, 288237.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61673528E12, 631077.0], [1.61673828E12, 282939.5], [1.61673468E12, 644412.0], [1.61673666E12, 515816.0], [1.6167363E12, 708911.5], [1.61673426E12, 522545.0], [1.61673708E12, 561367.0], [1.61673366E12, 182063.0], [1.61673588E12, 523592.0], [1.61673768E12, 634537.0], [1.6167375E12, 507508.0], [1.61673384E12, 337022.0], [1.61673546E12, 669689.5], [1.6167381E12, 323920.0], [1.61673486E12, 600996.0], [1.61673648E12, 575977.0], [1.61673504E12, 584976.0], [1.61673444E12, 561494.0], [1.6167369E12, 449807.5], [1.61673402E12, 453151.0], [1.61673624E12, 669221.0], [1.61673702E12, 506891.5], [1.61673342E12, 4843.5], [1.61673564E12, 706299.0], [1.61673762E12, 562585.0], [1.6167336E12, 130335.0], [1.61673804E12, 469360.5], [1.61673522E12, 540138.5], [1.61673642E12, 471886.0], [1.61673462E12, 664685.0], [1.61673846E12, 170055.0], [1.6167348E12, 636980.5], [1.6167342E12, 577892.5], [1.61673582E12, 475565.0], [1.61673744E12, 484281.0], [1.61673378E12, 267767.5], [1.616736E12, 557633.0], [1.6167354E12, 739020.0], [1.61673786E12, 606642.0], [1.61673798E12, 446107.0], [1.61673498E12, 557009.0], [1.61673438E12, 643634.0], [1.61673696E12, 473612.0], [1.61673456E12, 586325.0], [1.61673678E12, 552707.0], [1.61673618E12, 594447.0], [1.61673738E12, 592995.0], [1.61673396E12, 423143.0], [1.61673558E12, 657994.5], [1.61673354E12, 82474.0], [1.61673576E12, 703478.0], [1.6167378E12, 608623.0], [1.61673516E12, 693286.0], [1.6167384E12, 190437.0], [1.61673822E12, 280214.5], [1.61673474E12, 589047.0], [1.61673414E12, 510146.0], [1.6167372E12, 497113.5], [1.61673432E12, 540279.5], [1.61673594E12, 526626.0], [1.61673732E12, 587946.5], [1.61673372E12, 223120.0], [1.61673792E12, 424091.0], [1.61673534E12, 666904.0], [1.61673552E12, 704020.0], [1.61673774E12, 559663.0], [1.61673834E12, 232551.0], [1.61673492E12, 562149.5], [1.61673672E12, 477355.5], [1.61673654E12, 582248.0], [1.6167345E12, 616483.0], [1.6167339E12, 377540.0], [1.61673612E12, 619586.0], [1.61673714E12, 490167.0], [1.61673408E12, 487880.5], [1.61673756E12, 538078.5], [1.61673348E12, 34228.5], [1.61673816E12, 299263.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61673846E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 5999.0, "minX": 1.0, "maxY": 751935.0, "series": [{"data": [[2.0, 452256.0], [8.0, 454476.5], [35.0, 751935.0], [9.0, 493803.0], [36.0, 575622.5], [10.0, 509768.5], [11.0, 486459.0], [3.0, 497025.0], [12.0, 496815.0], [13.0, 617300.5], [54.0, 603520.5], [14.0, 659690.0], [15.0, 539581.0], [4.0, 434302.5], [1.0, 476201.0], [17.0, 269575.0], [18.0, 468620.5], [5.0, 498574.0], [21.0, 709314.0], [22.0, 517770.5], [6.0, 471898.5], [24.0, 559088.5], [27.0, 498320.0], [7.0, 540929.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 5999.0], [7.0, 6541.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 54.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 649280.0, "series": [{"data": [[2.0, 452250.5], [8.0, 450645.5], [35.0, 649280.0], [9.0, 466550.0], [36.0, 499613.5], [10.0, 509768.0], [11.0, 445246.0], [3.0, 481885.0], [12.0, 471575.0], [13.0, 595713.5], [54.0, 546299.0], [14.0, 579036.0], [15.0, 500985.0], [4.0, 420107.0], [1.0, 474818.0], [17.0, 269574.0], [18.0, 434263.5], [5.0, 496483.0], [21.0, 574022.5], [22.0, 467518.5], [6.0, 465336.5], [24.0, 485761.5], [27.0, 451039.0], [7.0, 511852.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 54.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61673342E12, "maxY": 1.8, "series": [{"data": [[1.61673528E12, 0.35], [1.61673828E12, 0.5], [1.61673468E12, 1.4166666666666667], [1.61673666E12, 0.4166666666666667], [1.6167363E12, 0.1], [1.61673426E12, 0.21666666666666667], [1.61673708E12, 0.6166666666666667], [1.61673366E12, 0.36666666666666664], [1.61673588E12, 0.48333333333333334], [1.61673768E12, 0.016666666666666666], [1.6167375E12, 0.5333333333333333], [1.61673384E12, 0.06666666666666667], [1.61673546E12, 0.43333333333333335], [1.6167381E12, 0.65], [1.61673486E12, 0.25], [1.61673648E12, 1.7666666666666666], [1.61673504E12, 0.05], [1.61673444E12, 0.18333333333333332], [1.6167369E12, 0.3], [1.61673402E12, 0.5666666666666667], [1.61673624E12, 0.35], [1.61673702E12, 0.65], [1.61673342E12, 1.6166666666666667], [1.61673564E12, 0.05], [1.61673762E12, 0.08333333333333333], [1.6167336E12, 0.9166666666666666], [1.61673804E12, 0.06666666666666667], [1.61673522E12, 0.2], [1.61673642E12, 0.016666666666666666], [1.61673462E12, 0.26666666666666666], [1.6167348E12, 0.23333333333333334], [1.6167342E12, 0.16666666666666666], [1.61673582E12, 0.45], [1.61673744E12, 0.4], [1.61673378E12, 0.36666666666666664], [1.616736E12, 0.1], [1.6167354E12, 1.1833333333333333], [1.61673786E12, 0.18333333333333332], [1.61673798E12, 1.0833333333333333], [1.61673498E12, 0.08333333333333333], [1.61673438E12, 0.15], [1.61673696E12, 0.55], [1.61673456E12, 0.26666666666666666], [1.61673678E12, 0.11666666666666667], [1.61673618E12, 0.4166666666666667], [1.61673738E12, 0.06666666666666667], [1.61673396E12, 0.65], [1.61673558E12, 0.55], [1.61673354E12, 1.45], [1.61673576E12, 0.05], [1.6167378E12, 0.5666666666666667], [1.61673516E12, 0.016666666666666666], [1.6167384E12, 0.03333333333333333], [1.61673822E12, 0.8833333333333333], [1.61673474E12, 0.2], [1.61673414E12, 0.5166666666666667], [1.6167372E12, 0.5], [1.61673432E12, 0.2], [1.61673594E12, 1.1166666666666667], [1.61673732E12, 0.06666666666666667], [1.61673372E12, 0.13333333333333333], [1.61673792E12, 0.5166666666666667], [1.61673534E12, 0.31666666666666665], [1.61673552E12, 0.13333333333333333], [1.61673774E12, 0.3333333333333333], [1.61673834E12, 0.26666666666666666], [1.61673492E12, 0.43333333333333335], [1.61673672E12, 0.48333333333333334], [1.61673654E12, 0.35], [1.6167345E12, 0.08333333333333333], [1.6167339E12, 0.31666666666666665], [1.61673612E12, 0.21666666666666667], [1.61673714E12, 0.38333333333333336], [1.61673408E12, 0.43333333333333335], [1.61673756E12, 0.8166666666666667], [1.61673348E12, 1.8], [1.61673816E12, 0.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6167384E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61673342E12, "maxY": 1.7833333333333334, "series": [{"data": [[1.61673528E12, 0.35], [1.61673828E12, 0.5666666666666667], [1.61673468E12, 1.4166666666666667], [1.61673666E12, 0.43333333333333335], [1.6167363E12, 0.1], [1.61673426E12, 0.21666666666666667], [1.61673708E12, 0.6166666666666667], [1.61673366E12, 0.36666666666666664], [1.61673588E12, 0.48333333333333334], [1.61673768E12, 0.016666666666666666], [1.6167375E12, 0.5333333333333333], [1.61673384E12, 0.06666666666666667], [1.61673546E12, 0.43333333333333335], [1.6167381E12, 0.8166666666666667], [1.61673486E12, 0.25], [1.61673648E12, 1.7833333333333334], [1.61673504E12, 0.05], [1.61673444E12, 0.18333333333333332], [1.6167369E12, 0.3], [1.61673402E12, 0.5666666666666667], [1.61673624E12, 0.35], [1.61673702E12, 0.6666666666666666], [1.61673342E12, 0.9333333333333333], [1.61673564E12, 0.05], [1.61673762E12, 0.08333333333333333], [1.6167336E12, 0.2833333333333333], [1.61673804E12, 0.06666666666666667], [1.61673522E12, 0.2], [1.61673642E12, 0.016666666666666666], [1.61673462E12, 0.26666666666666666], [1.61673846E12, 0.75], [1.6167348E12, 0.23333333333333334], [1.6167342E12, 0.16666666666666666], [1.61673582E12, 0.45], [1.61673744E12, 0.43333333333333335], [1.61673378E12, 0.36666666666666664], [1.616736E12, 0.1], [1.6167354E12, 1.2], [1.61673786E12, 0.2], [1.61673798E12, 1.1833333333333333], [1.61673498E12, 0.08333333333333333], [1.61673438E12, 0.15], [1.61673696E12, 0.5833333333333334], [1.61673456E12, 0.26666666666666666], [1.61673678E12, 0.11666666666666667], [1.61673618E12, 0.45], [1.61673738E12, 0.06666666666666667], [1.61673396E12, 0.65], [1.61673558E12, 0.5666666666666667], [1.61673354E12, 0.45], [1.61673576E12, 0.05], [1.6167378E12, 0.6166666666666667], [1.61673516E12, 0.016666666666666666], [1.6167384E12, 1.05], [1.61673822E12, 1.1333333333333333], [1.61673474E12, 0.2], [1.61673414E12, 0.5333333333333333], [1.6167372E12, 0.5333333333333333], [1.61673432E12, 0.2], [1.61673594E12, 1.1166666666666667], [1.61673732E12, 0.06666666666666667], [1.61673372E12, 0.13333333333333333], [1.61673792E12, 0.6166666666666667], [1.61673534E12, 0.31666666666666665], [1.61673552E12, 0.13333333333333333], [1.61673774E12, 0.36666666666666664], [1.61673834E12, 0.75], [1.61673492E12, 0.43333333333333335], [1.61673672E12, 0.5], [1.61673654E12, 0.35], [1.6167345E12, 0.08333333333333333], [1.6167339E12, 0.31666666666666665], [1.61673612E12, 0.21666666666666667], [1.61673714E12, 0.38333333333333336], [1.61673408E12, 0.43333333333333335], [1.61673756E12, 0.8333333333333334], [1.61673348E12, 0.7333333333333333], [1.61673816E12, 0.21666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61673348E12, 0.06666666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61673846E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61673342E12, "maxY": 1.7833333333333334, "series": [{"data": [[1.61673528E12, 0.35], [1.61673828E12, 0.5666666666666667], [1.61673468E12, 1.4166666666666667], [1.61673666E12, 0.43333333333333335], [1.6167363E12, 0.1], [1.61673426E12, 0.21666666666666667], [1.61673708E12, 0.6166666666666667], [1.61673366E12, 0.36666666666666664], [1.61673588E12, 0.48333333333333334], [1.61673768E12, 0.016666666666666666], [1.6167375E12, 0.5333333333333333], [1.61673384E12, 0.06666666666666667], [1.61673546E12, 0.43333333333333335], [1.6167381E12, 0.8166666666666667], [1.61673486E12, 0.25], [1.61673648E12, 1.7833333333333334], [1.61673504E12, 0.05], [1.61673444E12, 0.18333333333333332], [1.6167369E12, 0.3], [1.61673402E12, 0.5666666666666667], [1.61673624E12, 0.35], [1.61673702E12, 0.6666666666666666], [1.61673342E12, 0.9333333333333333], [1.61673564E12, 0.05], [1.61673762E12, 0.08333333333333333], [1.6167336E12, 0.2833333333333333], [1.61673804E12, 0.06666666666666667], [1.61673522E12, 0.2], [1.61673642E12, 0.016666666666666666], [1.61673462E12, 0.26666666666666666], [1.61673846E12, 0.75], [1.6167348E12, 0.23333333333333334], [1.6167342E12, 0.16666666666666666], [1.61673582E12, 0.45], [1.61673744E12, 0.43333333333333335], [1.61673378E12, 0.36666666666666664], [1.616736E12, 0.1], [1.6167354E12, 1.2], [1.61673786E12, 0.2], [1.61673798E12, 1.1833333333333333], [1.61673498E12, 0.08333333333333333], [1.61673438E12, 0.15], [1.61673696E12, 0.5833333333333334], [1.61673456E12, 0.26666666666666666], [1.61673678E12, 0.11666666666666667], [1.61673618E12, 0.45], [1.61673738E12, 0.06666666666666667], [1.61673396E12, 0.65], [1.61673558E12, 0.5666666666666667], [1.61673354E12, 0.45], [1.61673576E12, 0.05], [1.6167378E12, 0.6166666666666667], [1.61673516E12, 0.016666666666666666], [1.6167384E12, 1.05], [1.61673822E12, 1.1333333333333333], [1.61673474E12, 0.2], [1.61673414E12, 0.5333333333333333], [1.6167372E12, 0.5333333333333333], [1.61673432E12, 0.2], [1.61673594E12, 1.1166666666666667], [1.61673732E12, 0.06666666666666667], [1.61673372E12, 0.13333333333333333], [1.61673792E12, 0.6166666666666667], [1.61673534E12, 0.31666666666666665], [1.61673552E12, 0.13333333333333333], [1.61673774E12, 0.36666666666666664], [1.61673834E12, 0.75], [1.61673492E12, 0.43333333333333335], [1.61673672E12, 0.5], [1.61673654E12, 0.35], [1.6167345E12, 0.08333333333333333], [1.6167339E12, 0.31666666666666665], [1.61673612E12, 0.21666666666666667], [1.61673714E12, 0.38333333333333336], [1.61673408E12, 0.43333333333333335], [1.61673756E12, 0.8333333333333334], [1.61673348E12, 0.7333333333333333], [1.61673816E12, 0.21666666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.61673348E12, 0.06666666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61673846E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61673342E12, "maxY": 1.7833333333333334, "series": [{"data": [[1.61673528E12, 0.35], [1.61673828E12, 0.5666666666666667], [1.61673468E12, 1.4166666666666667], [1.61673666E12, 0.43333333333333335], [1.6167363E12, 0.1], [1.61673426E12, 0.21666666666666667], [1.61673708E12, 0.6166666666666667], [1.61673366E12, 0.36666666666666664], [1.61673588E12, 0.48333333333333334], [1.61673768E12, 0.016666666666666666], [1.6167375E12, 0.5333333333333333], [1.61673384E12, 0.06666666666666667], [1.61673546E12, 0.43333333333333335], [1.6167381E12, 0.8166666666666667], [1.61673486E12, 0.25], [1.61673648E12, 1.7833333333333334], [1.61673504E12, 0.05], [1.61673444E12, 0.18333333333333332], [1.6167369E12, 0.3], [1.61673402E12, 0.5666666666666667], [1.61673624E12, 0.35], [1.61673702E12, 0.6666666666666666], [1.61673342E12, 0.9333333333333333], [1.61673564E12, 0.05], [1.61673762E12, 0.08333333333333333], [1.6167336E12, 0.2833333333333333], [1.61673804E12, 0.06666666666666667], [1.61673522E12, 0.2], [1.61673642E12, 0.016666666666666666], [1.61673462E12, 0.26666666666666666], [1.61673846E12, 0.75], [1.6167348E12, 0.23333333333333334], [1.6167342E12, 0.16666666666666666], [1.61673582E12, 0.45], [1.61673744E12, 0.43333333333333335], [1.61673378E12, 0.36666666666666664], [1.616736E12, 0.1], [1.6167354E12, 1.2], [1.61673786E12, 0.2], [1.61673798E12, 1.1833333333333333], [1.61673498E12, 0.08333333333333333], [1.61673438E12, 0.15], [1.61673696E12, 0.5833333333333334], [1.61673456E12, 0.26666666666666666], [1.61673678E12, 0.11666666666666667], [1.61673618E12, 0.45], [1.61673738E12, 0.06666666666666667], [1.61673396E12, 0.65], [1.61673558E12, 0.5666666666666667], [1.61673354E12, 0.45], [1.61673576E12, 0.05], [1.6167378E12, 0.6166666666666667], [1.61673516E12, 0.016666666666666666], [1.6167384E12, 1.05], [1.61673822E12, 1.1333333333333333], [1.61673474E12, 0.2], [1.61673414E12, 0.5333333333333333], [1.6167372E12, 0.5333333333333333], [1.61673432E12, 0.2], [1.61673594E12, 1.1166666666666667], [1.61673732E12, 0.06666666666666667], [1.61673372E12, 0.13333333333333333], [1.61673792E12, 0.6166666666666667], [1.61673534E12, 0.31666666666666665], [1.61673552E12, 0.13333333333333333], [1.61673774E12, 0.36666666666666664], [1.61673834E12, 0.75], [1.61673492E12, 0.43333333333333335], [1.61673672E12, 0.5], [1.61673654E12, 0.35], [1.6167345E12, 0.08333333333333333], [1.6167339E12, 0.31666666666666665], [1.61673612E12, 0.21666666666666667], [1.61673714E12, 0.38333333333333336], [1.61673408E12, 0.43333333333333335], [1.61673756E12, 0.8333333333333334], [1.61673348E12, 0.7333333333333333], [1.61673816E12, 0.21666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61673348E12, 0.06666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61673846E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

